{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/ListGroup.js","config/contact.config.js","utils/queryRouter.js","../node_modules/react-bootstrap/esm/Jumbotron.js","container/courses/paymentCompletionForm.jsx","container/courses/courseFilter.jsx","container/courses/index.js","container/exams/examListByCourse.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","ListGroupItem","React","forwardRef","_ref","ref","bsPrefix","active","disabled","className","variant","action","as","eventKey","onClick","props","_objectWithoutPropertiesLoose","useBootstrapPrefix","handleClick","useCallback","event","preventDefault","stopPropagation","createElement","AbstractNavItem","_extends","makeEventKey","href","classNames","defaultProps","displayName","show","transition","Fade","closeLabel","controllables","Alert","uncontrolledProps","_useUncontrolled","useUncontrolled","children","onClose","dismissible","Transition","prefix","handleClose","useEventCallback","e","alert","role","undefined","CloseButton","label","unmountOnExit","in","DivStyledAsH4","divWithClassName","Link","createWithBsPrefix","Component","SafeAnchor","Heading","ListGroup","horizontalVariant","activeKey","horizontal","_useUncontrolled$as","controlledProps","AbstractNav","Item","ContactConfig","mobile","email","location","socials","facebook","twitter","instagram","about","useQuery","search","useLocation","useMemo","URLSearchParams","Jumbotron","_classes","_ref$as","fluid","classes","PaymentCompletionForm","showPaymentModalForm","setShowPaymentModalForm","course","enrollmentHandler","onHide","Header","closeButton","Title","Body","to","id","size","Footer","CourseFilter","pgCourseType","faculty","dispatch","useDispatch","useState","loading","setLoading","showFilter","setShowFilter","initialValues","onSubmit","values","setSubmitting","fetchCourseByFilterLoader","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","Form","Button","Group","controlId","Label","Control","type","placeholder","onChange","onBlur","value","Object","PgCourseType","slice","map","pgCourseTypeToString","Faculty","facultyToString","duration","require","relativeTime","moment","styles","position","top","right","zIndex","Index","query","get","coursesStore","useSelector","state","courses","isAuthenticated","auth","token","enrollResLoader","setEnrollResLoader","res","setRes","currentPage","setCurrentPage","modalCourse","setModalCourse","setShowPayemntModalForm","showModalMsg","setShowModalMsg","enrolledCoursesId","coursesEnrolledByStu","useEffect","courseResetLoader","fetchCourseEnrolledByStuLoader","fetchCourseLoader","handleModalClose","courseId","axios","baseURL","url","method","then","response","data","message","catch","error","paginatedCourses","paginate","Modal","remarkPlugins","remarkGfm","Toast","style","src","alt","length","Card","width","fontSize","fontWeight","Text","Badge","pill","price","discountPricePercentage","Math","ceil","endDate","diff","startDate","humanize","format","indexOf","height","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","page","itemClass","linkClass","prevPageText","nextPageText","ExamListsByCat","paginatedCoursesEnrolledByStu","isAfter"],"mappings":"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","file":"static/js/30.32257780.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst { title: _defaultTitle, description: _defaultDescription } =\r\n  RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\nimport AbstractNavItem from './AbstractNavItem';\nimport { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null,\n  active: false,\n  disabled: false\n};\nvar ListGroupItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      active = _ref.active,\n      disabled = _ref.disabled,\n      className = _ref.className,\n      variant = _ref.variant,\n      action = _ref.action,\n      as = _ref.as,\n      eventKey = _ref.eventKey,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"active\", \"disabled\", \"className\", \"variant\", \"action\", \"as\", \"eventKey\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  var handleClick = useCallback(function (event) {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    if (onClick) onClick(event);\n  }, [disabled, onClick]);\n  return React.createElement(AbstractNavItem, _extends({\n    ref: ref\n  }, props, {\n    eventKey: makeEventKey(eventKey, props.href) // eslint-disable-next-line\n    ,\n    as: as || (action ? props.href ? 'a' : 'button' : 'div'),\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, active && 'active', disabled && 'disabled', variant && bsPrefix + \"-\" + variant, action && bsPrefix + \"-action\")\n  }));\n});\nListGroupItem.defaultProps = defaultProps;\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar controllables = {\n  show: 'onClose'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, controllables),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      Transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    onClose(false, e);\n  });\n  var alert = React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return React.createElement(Transition, _extends({\n    unmountOnExit: true,\n    ref: ref\n  }, props, {\n    in: show\n  }), alert);\n});\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nAlert.Heading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nexport default Alert;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractNav from './AbstractNav';\nimport ListGroupItem from './ListGroupItem';\nvar defaultProps = {\n  variant: null,\n  horizontal: null\n};\nvar ListGroup = React.forwardRef(function (props, ref) {\n  var _useUncontrolled = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  }),\n      className = _useUncontrolled.className,\n      bsPrefix = _useUncontrolled.bsPrefix,\n      variant = _useUncontrolled.variant,\n      horizontal = _useUncontrolled.horizontal,\n      _useUncontrolled$as = _useUncontrolled.as,\n      as = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      controlledProps = _objectWithoutPropertiesLoose(_useUncontrolled, [\"className\", \"bsPrefix\", \"variant\", \"horizontal\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group');\n  var horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : \"horizontal-\" + horizontal;\n  } else {\n    horizontalVariant = null;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return React.createElement(AbstractNav, _extends({\n    ref: ref\n  }, controlledProps, {\n    as: as,\n    className: classNames(className, bsPrefix, variant && bsPrefix + \"-\" + variant, horizontalVariant && bsPrefix + \"-\" + horizontalVariant)\n  }));\n});\nListGroup.defaultProps = defaultProps;\nListGroup.displayName = 'ListGroup';\nListGroup.Item = ListGroupItem;\nexport default ListGroup;","export const ContactConfig = {\r\n  mobile: '+8801521500642, +8801641622541',\r\n  email: 'contact@medionexam.com',\r\n  location: 'Sopura, Rajshahi',\r\n  socials: {\r\n    facebook: 'https://www.facebook.com/medionexam/',\r\n    twitter: '#',\r\n    instagram: '#'\r\n  },\r\n  about:\r\n    'MediOnExam (Medical Online Examination) team consists of technical, academic and advisory subteams. Members of Each subteams are dedicated to their work. Learn, Test and Success - is our motto.'\r\n}\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nexport function useQuery() {\r\n  const { search } = useLocation()\r\n  return React.useMemo(() => new URLSearchParams(search), [search])\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"fluid\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","import React from 'react'\r\nimport { Alert, Button, ListGroup, Modal } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { ContactConfig } from '../../config/contact.config'\r\n\r\nexport default function PaymentCompletionForm({\r\n  showPaymentModalForm,\r\n  setShowPaymentModalForm,\r\n  course,\r\n  enrollmentHandler\r\n}) {\r\n  const handleClose = () => setShowPaymentModalForm(false)\r\n\r\n  return (\r\n    <div className='paymentCompletionForm'>\r\n      <Modal show={showPaymentModalForm} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Payment Required</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Thanks for enrolling this course. You are few steps apart.</p>\r\n          <ListGroup className='mb-2'>\r\n            <ListGroup.Item>\r\n              Step 1. Please make Payment first to Personal Bkash (01737313915)\r\n              | Rocket account (01737313915). For detail procedure go to{' '}\r\n              <Link to='/payment'>Payment page</Link>{' '}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <p className='mt-2'>Step 2. Now Message at 01737313915</p>\r\n              <Alert variant='info'>\r\n                Write - Your name &lt;Space&gt; Your User ID / Your Email\r\n                &lt;Space&gt; The bKash Number (From which you send money)\r\n              </Alert>\r\n              <Alert variant='warning'>\r\n                You will Get Your user id at Topbar with golden color text or\r\n                your <Link to='/profile'>Profile</Link> marked with golden\r\n                background at the top section\r\n              </Alert>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n          <p>\r\n            Now, Click the 'Confirm' button to complete this course enrollment.\r\n            Please wait until admin approves your payment. For any problems, go\r\n            to <Link to='/help'>Help section.</Link>. Or contact us with{' '}\r\n            <span>{ContactConfig.mobile}</span>\r\n            <br />\r\n            <span>{ContactConfig.email}</span>\r\n          </p>\r\n          <div className='d-flex justify-content-center mt-2'>\r\n            <Button\r\n              variant='primary'\r\n              onClick={() => {\r\n                enrollmentHandler(course.id)\r\n                handleClose()\r\n              }}\r\n              size='lg'\r\n            >\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import { Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Form, Jumbotron } from 'react-bootstrap'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport {\r\n  PgCourseType,\r\n  faculty as Faculty,\r\n  facultyToString,\r\n  pgCourseTypeToString\r\n} from '../../utils/faculty'\r\nimport { fetchCourseByFilterLoader } from '../../store/courses'\r\n\r\nexport default function CourseFilter({\r\n  search = '',\r\n  pgCourseType = null,\r\n  faculty = null\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState(false)\r\n  const [showFilter, setShowFilter] = useState(false)\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ search, pgCourseType, faculty }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setLoading(false)\r\n          const { search, pgCourseType, faculty } = values\r\n          dispatch(\r\n            fetchCourseByFilterLoader(\r\n              pgCourseType === '-1' ? null : pgCourseType,\r\n              faculty === '-1' ? null : faculty,\r\n              search\r\n            )\r\n          )\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n          /* and other goodies */\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            {loading && <CircleLoader />}\r\n            <h3>\r\n              <Button\r\n                onClick={() => {\r\n                  setShowFilter(!showFilter)\r\n                }}\r\n              >\r\n                Filter\r\n              </Button>\r\n            </h3>\r\n            <p className='text-muted'>(Click to expand filter options)</p>\r\n            {showFilter && (\r\n              <Jumbotron>\r\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\r\n                  <Form.Label>Search</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder='e.g. Abcde..'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.search}\r\n                  />\r\n                </Form.Group>\r\n                <div className='pl-2'>\r\n                  <Form.Group\r\n                    controlId='courseFilter.pgCourseType'\r\n                    className='mr-2'\r\n                  >\r\n                    <Form.Label>Select Programme</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      name='pgCourseType'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.pgCourseType}\r\n                    >\r\n                      <option value='-1'>All</option>\r\n                      {Object.values(PgCourseType)\r\n                        .slice(1) // removing the first value (All: 0)\r\n                        .map((value) => (\r\n                          <option value={value}>\r\n                            {pgCourseTypeToString(value)}\r\n                          </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='courseFilter.faculty'>\r\n                    <Form.Label>Select Subject</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      name='faculty'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.faculty}\r\n                    >\r\n                      <option value='-1'>All</option>\r\n                      {Object.values(Faculty)\r\n                        .slice(1) // removing the first value (all: 0)\r\n                        .map((value) => (\r\n                          <option value={value}>\r\n                            {facultyToString(value)}\r\n                          </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className='mt-1 d-flex justify-content-center'>\r\n                  <Button type='submit'>Apply</Button>\r\n                </div>\r\n              </Jumbotron>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Alert, Badge, Button, Card, Modal, Toast } from 'react-bootstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport remarkGfm from 'remark-gfm'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport {\r\n  courseResetLoader,\r\n  fetchCourseByFilterLoader,\r\n  fetchCourseEnrolledByStuLoader,\r\n  fetchCourseLoader\r\n} from '../../store/courses'\r\nimport { facultyToString, pgCourseTypeToString } from '../../utils/faculty'\r\nimport CourseFilter from './courseFilter'\r\nimport { paginate } from '../../utils/paginate'\r\nimport Pagination from 'react-js-pagination'\r\nimport { useQuery } from '../../utils/queryRouter'\r\nimport PaymentCompletionForm from './paymentCompletionForm'\r\nconst duration = require('dayjs/plugin/duration')\r\nconst relativeTime = require('dayjs/plugin/relativeTime')\r\nmoment.extend(relativeTime)\r\nmoment.extend(duration)\r\n\r\n//styles to show toast message\r\nconst styles = {\r\n  position: 'fixed',\r\n  top: '70px',\r\n  right: '10px',\r\n  zIndex: 100\r\n}\r\n\r\n/**\r\n * @returns nothing\r\n */\r\nexport default function Index() {\r\n  const dispatch = useDispatch()\r\n  let query = useQuery()\r\n  const pgCourseType = query.get('pgCourseType')\r\n  const faculty = query.get('faculty')\r\n  const coursesStore = useSelector((state) => state.courses)\r\n  const isAuthenticated = useSelector((state) => state.auth.token !== null)\r\n  const [enrollResLoader, setEnrollResLoader] = useState(false)\r\n  const [res, setRes] = useState(null) // get server response after enrollment request by student\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [modalCourse, setModalCourse] = useState(null)\r\n  const [showPaymentModalForm, setShowPayemntModalForm] = useState(false)\r\n  const [showModalMsg, setShowModalMsg] = useState(null) // show modal\r\n  const courses = coursesStore ? coursesStore.courses : []\r\n  const enrolledCoursesId = coursesStore.coursesEnrolledByStu.map(\r\n    (course) => course.id\r\n  )\r\n  const pageSize = 5\r\n\r\n  useEffect(() => {\r\n    dispatch(courseResetLoader()) // reset course error msg\r\n    dispatch(fetchCourseEnrolledByStuLoader())\r\n    if (pgCourseType || faculty) {\r\n      return dispatch(fetchCourseByFilterLoader(pgCourseType, faculty))\r\n    }\r\n\r\n    dispatch(fetchCourseLoader()) // fetch courses\r\n  }, [dispatch, faculty, pgCourseType])\r\n\r\n  const handleClose = () => {\r\n    setRes(null)\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setShowModalMsg(null)\r\n  }\r\n  const enrollmentHandler = (courseId) => {\r\n    setEnrollResLoader(true)\r\n\r\n    axios({\r\n      baseURL: process.env.REACT_APP_SITE_URL,\r\n      url: '/courses/enroll/' + courseId,\r\n      method: 'patch'\r\n    })\r\n      .then((response) => {\r\n        setEnrollResLoader(false)\r\n        setRes(response.data.message)\r\n      })\r\n      .catch((error) => {\r\n        setEnrollResLoader(false)\r\n        setRes(\r\n          'Sorry. Enrollment to this course is not possible due to server error. Please contact with admin.'\r\n        )\r\n      })\r\n  }\r\n  const paginatedCourses = paginate(courses, currentPage, pageSize)\r\n  return (\r\n    <div>\r\n      {/* SEO section */}\r\n      {<MetaInfo {...RoutesConfig.Course.metaInfo} />}\r\n\r\n      {/* Modal section --> shows paymentForm after clicking 'Enrollment' button */}\r\n      {showPaymentModalForm && (\r\n        <PaymentCompletionForm\r\n          showPaymentModalForm={showPaymentModalForm}\r\n          setShowPaymentModalForm={setShowPayemntModalForm}\r\n          course={modalCourse}\r\n          enrollmentHandler={enrollmentHandler}\r\n        />\r\n      )}\r\n\r\n      {/* Modal section --> shows details of a course after clicking 'More' button */}\r\n      <Modal show={showModalMsg} onHide={handleModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n            {showModalMsg}\r\n          </ReactMarkdown>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary ' onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Toast section --> shows server response after enrollment request */}\r\n      <Toast show={res} onClose={handleClose} style={styles}>\r\n        <Toast.Header className='bg-warning text-white'>\r\n          <img src='holder.js/20x20?text=%20' className='rounded me-2' alt='' />\r\n          <strong className='me-auto'>Server Response</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{res}</Toast.Body>\r\n      </Toast>\r\n\r\n      {/* Main Section */}\r\n      <h3 className='text-center heading'>Available Courses</h3>\r\n      {enrollResLoader && <CircleLoader />}\r\n      {coursesStore.loading && <CircleLoader />}\r\n      <CourseFilter pgCourseType={pgCourseType} faculty={faculty} />\r\n      <div className='d-flex justify-content-around flex-wrap mt-3'>\r\n        {coursesStore.error ? ( // show courses error messsage\r\n          <p className='text-danger'>\r\n            <span>Courses can not be retrived.</span>\r\n            <hr />\r\n            <span>Possible Reason: {coursesStore.error}</span>\r\n          </p>\r\n        ) : courses.length < 1 ? (\r\n          <Alert variant='danger'>No Courses Available</Alert>\r\n        ) : (\r\n          paginatedCourses.map((course) => (\r\n            <>\r\n              <Card className='my-3' style={{ width: '350px' }}>\r\n                <Card.Body>\r\n                  <Link to={`/courses/${course.id}`}>\r\n                    <Card.Title\r\n                      className='text-center'\r\n                      style={{ fontSize: '1.4rem', fontWeight: '900' }}\r\n                    >\r\n                      {course.title}\r\n                    </Card.Title>\r\n                  </Link>\r\n                  <Card.Text className=''>\r\n                    <div className='text-right mb-2'>\r\n                      <Badge pill variant='dark' className='mr-2'>\r\n                        {pgCourseTypeToString(course.pgCourseType)}\r\n                      </Badge>\r\n                      <Badge pill variant='dark'>\r\n                        {facultyToString(course.faculty)}\r\n                      </Badge>\r\n                    </div>\r\n                    <div>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Regular Price:{' '}\r\n                        {course.price ? course.price + ' Taka' : 'Free'}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {course.price && course.discountPricePercentage ? (\r\n                      <div className='mt-1'>\r\n                        <span className='bg-secondary text-white px-1'>\r\n                          Special Price:{' '}\r\n                          {course.price -\r\n                            Math.ceil(\r\n                              (course.price * course.discountPricePercentage) /\r\n                                100\r\n                            ) +\r\n                            ' Taka'}{' '}\r\n                        </span>\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n\r\n                    <div className='my-1'>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Duration:{' '}\r\n                        {moment\r\n                          .duration(\r\n                            moment(course.endDate).diff(course.startDate)\r\n                          )\r\n                          .humanize() + ' long.'}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Start: {moment(course.startDate).format('DD-MMM-YY')}\r\n                      </span>\r\n                    </div>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <p className='text-center'>\r\n                      <Button\r\n                        variant='outline-primary'\r\n                        onClick={() => {\r\n                          setShowModalMsg(course.description)\r\n                        }}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </p>\r\n                  </Card.Text>\r\n                  <hr />\r\n                  <Card.Text className='text-center mt-2'>\r\n                    <Link to={'/exams/courses/' + course.id}>\r\n                      <Button variant='primary'>Go to Exams</Button>\r\n                    </Link>\r\n                  </Card.Text>\r\n                  {isAuthenticated && (\r\n                    <>\r\n                      <hr />\r\n                      <div className='d-flex justify-content-center align-items-center'>\r\n                        {enrolledCoursesId.indexOf(course.id) > -1 ? (\r\n                          <p className='text-success text-center'>\r\n                            Already Enrolled\r\n                          </p>\r\n                        ) : (\r\n                          <Button\r\n                            variant='primary'\r\n                            style={{\r\n                              width: '300px',\r\n                              height: '55px',\r\n                              fontSize: '18px'\r\n                            }}\r\n                            onClick={() => {\r\n                              if (course.price) {\r\n                                setShowPayemntModalForm(true)\r\n                                setModalCourse(course)\r\n                              } else enrollmentHandler(course.id)\r\n                            }}\r\n                          >\r\n                            Enroll\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </>\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className='d-flex justify-content-center mt-3'>\r\n        <Pagination\r\n          activePage={currentPage}\r\n          itemsCountPerPage={pageSize}\r\n          totalItemsCount={courses.length}\r\n          pageRangeDisplayed={2}\r\n          onChange={(page) => {\r\n            setCurrentPage(page)\r\n          }}\r\n          itemClass='page-item'\r\n          linkClass='page-link'\r\n          prevPageText='Previous'\r\n          nextPageText='Next'\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { fetchCourseEnrolledByStuLoader } from '../../store/courses'\r\nimport CoursesComponent from '../courses/'\r\nimport Pagination from 'react-js-pagination'\r\nimport { paginate } from '../../utils/paginate'\r\n\r\nexport default function ExamListsByCat() {\r\n  const dispatch = useDispatch()\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const courses = useSelector((state) => state.courses)\r\n  const pageSize = 5\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCourseEnrolledByStuLoader())\r\n  }, [dispatch])\r\n  const paginatedCoursesEnrolledByStu = paginate(\r\n    courses.coursesEnrolledByStu,\r\n    currentPage,\r\n    pageSize\r\n  )\r\n  return (\r\n    <div>\r\n      {courses.loading && <CircleLoader />}\r\n      <h2 className='text-center'>Enrolled Courses</h2>\r\n      <div className='m-3'>\r\n        {courses.coursesEnrolledByStu.length < 1 ? (\r\n          <div>\r\n            <p className='text-center text-danger'>\r\n              You have not enrolled for any course yet. Please enroll any course\r\n              first.\r\n            </p>\r\n            <CoursesComponent />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className='d-flex justify-content-center flex-wrap'>\r\n              {paginatedCoursesEnrolledByStu.map((course) => (\r\n                <div\r\n                  className='mt-3 mr-3 p-3 bg-dark text-white'\r\n                  style={{ width: '250px' }}\r\n                >\r\n                  <p className='lead text-center'>{course.title}</p>\r\n                  <p className='mt-2 text-center'>\r\n                    {moment().isAfter(course.endDate) ? (\r\n                      <Badge variant='danger' className='p-2'>\r\n                        This Course is ended\r\n                      </Badge>\r\n                    ) : (\r\n                      <Link to={'/exams/courses/' + course.id}>\r\n                        <Badge variant='light' className='p-2'>\r\n                          Go to Exams\r\n                        </Badge>\r\n                      </Link>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className='d-flex justify-content-center mt-3'>\r\n              <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={pageSize}\r\n                totalItemsCount={courses.length}\r\n                pageRangeDisplayed={2}\r\n                onChange={(page) => {\r\n                  setCurrentPage(page)\r\n                }}\r\n                itemClass='page-item'\r\n                linkClass='page-link'\r\n                prevPageText='Previous'\r\n                nextPageText='Next'\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <MetaInfo {...RoutesConfig.Exams.metaInfo} />\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}