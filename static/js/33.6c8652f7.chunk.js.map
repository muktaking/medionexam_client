{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","components/exams/gallary/examCatBadges.js","components/socialShare/socialShare.js","components/exams/gallary/examCard.js","components/exams/gallary/gallaryCard.js","container/exams/examLists.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","ExamCatBadges","categoryType","map","category","key","pill","variant","categoryTypeVariant","className","iconStyle","SocialShare","url","props","style","fontSize","quote","hashtag","size","round","body","source","EditExam","React","lazy","isExamFree","filter","cat","length","ExamCard","width","height","examId","courseId","imgSrc","examLoader","createdAt","endDate","landing","dispatch","useDispatch","token","useSelector","state","auth","useState","res","setRes","editExam","setEditExam","canActivate","rolePermitted","coordinator","Img","src","Body","Title","fontWeight","Subtitle","ct","to","onClick","resetExamResultLoader","disabled","id","defaultMessage","fallback","editExamHandleClose","trigger","placement","overlay","PopoverWrapper","forwardRef","ref","as","Content","axios","baseURL","method","then","response","catch","error","JSON","stringify","ListCard","exams","intl","useIntl","show","setShow","handleClose","Modal","onHide","Header","closeButton","formatMessage","Badge","toUpperCase","Row","Col","slice","exam","min","max","Math","floor","random","imageUrl","free","Footer","Button","maxWidth","i","startDate","examType","examTypeBgColor","ExamLists","this","onGetAllExamsLoader","Object","keys","Component","injectIntl","connect","getAllExamsLoader"],"mappings":"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","file":"static/js/33.6c8652f7.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst { title: _defaultTitle, description: _defaultDescription } =\r\n  RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import React from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\n\r\nexport default function ExamCatBadges({ categoryType }) {\r\n  return (\r\n    categoryType &&\r\n    categoryType.map((category) => (\r\n      <Badge\r\n        key={category.name}\r\n        pill\r\n        variant={categoryTypeVariant(category.name)}\r\n        className='mr-1'\r\n      >\r\n        {category.name}\r\n      </Badge>\r\n    ))\r\n  )\r\n}\r\n\r\nconst categoryTypeVariant = (name) => {\r\n  let variant = 'primary'\r\n  switch (name) {\r\n    case 'Featured':\r\n      variant = 'warning'\r\n      break\r\n    case 'Free':\r\n      variant = 'secondary'\r\n      break\r\n\r\n    default:\r\n      break\r\n  }\r\n  return variant\r\n}\r\n","import React from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport {\r\n  EmailIcon,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton\r\n} from 'react-share'\r\n\r\nconst iconStyle = {\r\n  size: 35,\r\n  round: true\r\n}\r\n\r\nexport default function SocialShare({ title, description, url, ...props }) {\r\n  url = process.env.REACT_APP_BASE_URL + url\r\n\r\n  return (\r\n    <div className='mt-3' {...props}>\r\n      <Badge\r\n        variant='success'\r\n        className='mr-1 p-1'\r\n        style={{ fontSize: '.8rem' }}\r\n      >\r\n        Share on\r\n      </Badge>\r\n\r\n      <FacebookShareButton\r\n        url={url}\r\n        quote={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <FacebookIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </FacebookShareButton>\r\n\r\n      <TwitterShareButton\r\n        url={url}\r\n        title={description}\r\n        hashtag={title}\r\n        className='mr-1'\r\n      >\r\n        <TwitterIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </TwitterShareButton>\r\n\r\n      <EmailShareButton\r\n        url={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <EmailIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </EmailShareButton>\r\n\r\n      <LinkedinShareButton\r\n        url={url}\r\n        source={url}\r\n        body={description}\r\n        title={title}\r\n        className='mr-1'\r\n      >\r\n        <LinkedinIcon size={iconStyle.size} round={iconStyle.round} />\r\n      </LinkedinShareButton>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport React, { Suspense, useState } from 'react'\r\nimport { Alert, Button, Card, OverlayTrigger, Popover } from 'react-bootstrap'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { LazyLoadComponent } from 'react-lazy-load-image-component'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { resetExamResultLoader } from '../../../store/exams'\r\nimport { canActivate, rolePermitted } from '../../../utils/canActivate'\r\nimport SocialShare from '../../socialShare/socialShare'\r\nimport ExamCatBadges from './examCatBadges'\r\nconst EditExam = React.lazy(() =>\r\n  import('../../../container/examBuilder/editExam')\r\n)\r\n\r\nfunction isExamFree(categoryType) {\r\n  return categoryType.filter((cat) => cat.name === 'Free').length > 0\r\n}\r\n\r\nexport default function ExamCard({\r\n  width = '350',\r\n  height = '180',\r\n  examId,\r\n  courseId,\r\n  imgSrc,\r\n  title,\r\n  categoryType,\r\n  description,\r\n  createdAt,\r\n  endDate,\r\n  examLoader,\r\n  landing\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const token = useSelector((state) => state.auth.token)\r\n  const [res, setRes] = useState(null)\r\n  const [editExam, setEditExam] = useState(false)\r\n\r\n  function editExamHandleClose() {\r\n    setEditExam(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card key={examId} className='mr-2 mb-2' style={{ width: width + 'px' }}>\r\n        <LazyLoadComponent>\r\n          {!canActivate(rolePermitted.coordinator, token) && (\r\n            <Card.Img\r\n              variant='top'\r\n              src={imgSrc}\r\n              width={width}\r\n              height={height}\r\n            />\r\n          )}\r\n        </LazyLoadComponent>\r\n        <Card.Body>\r\n          <div>\r\n            <Card.Title style={{ fontSize: '1.4rem', fontWeight: '900' }}>\r\n              {title}\r\n            </Card.Title>\r\n\r\n            <Card.Subtitle>\r\n              <ExamCatBadges\r\n                categoryType={\r\n                  token\r\n                    ? categoryType.filter((ct) => ct.name !== 'Free')\r\n                    : categoryType\r\n                }\r\n              />\r\n            </Card.Subtitle>\r\n          </div>\r\n\r\n          <div className='mt-1 pt-2'>\r\n            <p className=''>{description} </p>\r\n\r\n            {/* <p className='text-right'>\r\n              <span className='text-muted'>\r\n                {intl.formatMessage({\r\n                  id: 'db.so',\r\n                  defaultMessage: 'Start on'\r\n                })}{' '}\r\n                : {moment(createdAt).format('YYYY-MMM-DD hh:mm A')}\r\n              </span>\r\n              <br />\r\n              {\r\n                <span className='text-danger'>\r\n                  {intl.formatMessage({\r\n                    id: 'db.eo',\r\n                    defaultMessage: 'Ends on'\r\n                  })}{' '}\r\n                  : {moment(endDate).format('YYYY-MMM-DD hh:mm A')}\r\n                </span>\r\n              }\r\n            </p> */}\r\n          </div>\r\n          <hr />\r\n          {token &&\r\n            landing &&\r\n            (isExamFree(categoryType) ? (\r\n              <Alert variant='warning' className='mt-2'>\r\n                Taking part to this exam will not be added to your exam profile.{' '}\r\n              </Alert>\r\n            ) : (\r\n              <Alert variant='danger' className='mt-2'>\r\n                You can not take part this exam. Go to{' '}\r\n                <Link to='/exams'>avaiable exams </Link>\r\n              </Alert>\r\n            ))}\r\n          <div className='d-flex justify-content-around'>\r\n            <Link\r\n              className='text-white'\r\n              to={\r\n                courseId\r\n                  ? `/exams/${examId}_${courseId}`\r\n                  : isExamFree(categoryType)\r\n                  ? `/exams/free/${examId}`\r\n                  : ''\r\n              }\r\n            >\r\n              <Button\r\n                variant='outline-primary'\r\n                onClick={() => {\r\n                  dispatch(resetExamResultLoader())\r\n                }}\r\n                disabled={courseId ? false : !isExamFree(categoryType)}\r\n              >\r\n                <FormattedMessage id='btn.start' defaultMessage='Start Exam' />\r\n              </Button>\r\n            </Link>\r\n            {/* <Link className='text-white' to={'/result/rank/' + examId}>\r\n              <Button\r\n                onClick={() => {\r\n                  dispatch(resetExamResultLoader())\r\n                }}\r\n                variant='outline-dark'\r\n              >\r\n                <FormattedMessage id='btn.rank' defaultMessage='Rank' />\r\n              </Button>\r\n            </Link> */}\r\n          </div>\r\n\r\n          <hr />\r\n          <SocialShare\r\n            url={'/exams/' + examId}\r\n            title={title}\r\n            description={description}\r\n          />\r\n\r\n          {canActivate(rolePermitted.coordinator, token) && (\r\n            <div className='mt-2'>\r\n              {editExam && (\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  <EditExam\r\n                    editExam={editExam}\r\n                    editExamHandleClose={editExamHandleClose}\r\n                  />\r\n                </Suspense>\r\n              )}\r\n              <Button\r\n                variant='primary'\r\n                className='mr-3'\r\n                onClick={() => {\r\n                  setEditExam(true)\r\n                }}\r\n              >\r\n                Edit\r\n              </Button>\r\n\r\n              <OverlayTrigger\r\n                trigger='click'\r\n                placement='top'\r\n                overlay={\r\n                  <PopoverWrapper\r\n                    id={examId}\r\n                    res={res}\r\n                    setRes={setRes}\r\n                    token={token}\r\n                    examLoader={examLoader}\r\n                  />\r\n                }\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    dispatch(resetExamResultLoader())\r\n                  }}\r\n                  variant='danger'\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </OverlayTrigger>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nconst PopoverWrapper = React.forwardRef(\r\n  ({ id, res, setRes, token, examLoader, ...props }, ref) => (\r\n    <Popover id='popover-basic' ref={ref} {...props}>\r\n      <Popover.Title as='h3'>Are You Sure To delete The Exam</Popover.Title>\r\n      <Popover.Content>\r\n        <p>{res}</p>\r\n        <Button\r\n          variant='danger'\r\n          onClick={() => {\r\n            //setAuthorizationToken(token);\r\n            axios({\r\n              baseURL: process.env.REACT_APP_SITE_URL,\r\n              url: '/exams/' + id,\r\n              method: 'delete'\r\n            })\r\n              .then((response) => {\r\n                examLoader()\r\n                setRes('Successfully Deleted')\r\n              })\r\n              .catch((error) => {\r\n                setRes('Can not delete the exam' + JSON.stringify(error))\r\n              })\r\n          }}\r\n        >\r\n          Yes\r\n        </Button>\r\n      </Popover.Content>\r\n    </Popover>\r\n  )\r\n)\r\n","import React, { useState } from 'react'\r\nimport { Badge, Button, Col, Modal, Row } from 'react-bootstrap'\r\nimport { useIntl } from 'react-intl'\r\nimport { Link } from 'react-router-dom'\r\nimport ExamCard from './examCard'\r\n\r\nfunction getRndInteger(min, max) {\r\n  return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n\r\nexport default function ListCard({ title, exams, landing, examLoader }) {\r\n  const intl = useIntl()\r\n\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} size={'xl'}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {intl.formatMessage({ id: 'btn.more', defaultMessage: 'More' })}\r\n            <Badge variant='warning'>{' ' + title.toUpperCase() + ' '}</Badge>\r\n            {intl.formatMessage({ id: 'btn.exams', defaultMessage: 'Exams' })}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {\r\n            <Row className='mt-3 ml-3'>\r\n              <Col className='d-flex justify-content-center flex-wrap'>\r\n                {exams.slice(2).map((exam) => (\r\n                  <ExamCard\r\n                    key={exam.id}\r\n                    examId={exam.id}\r\n                    imgSrc={\r\n                      exam.categoryType.length > 0\r\n                        ? process.env.REACT_APP_SITE_URL +\r\n                          '/' +\r\n                          exam.categoryType[\r\n                            getRndInteger(0, exam.categoryType.length)\r\n                          ].imageUrl\r\n                        : '/assets/image/uncat.jpg'\r\n                    }\r\n                    title={exam.title}\r\n                    categoryType={\r\n                      exam.categoryType.length > 0\r\n                        ? exam.categoryType\r\n                        : [{ name: 'Uncategorized' }]\r\n                    }\r\n                    description={exam.description}\r\n                    createdAt={exam.createdAt}\r\n                    endDate={exam.endDate}\r\n                    free={\r\n                      exam.categoryType.filter((cat) => cat.name === 'Free')\r\n                        .length > 0\r\n                    }\r\n                    examLoader={examLoader}\r\n                    landing={landing}\r\n                  />\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n          }\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <div className='my-5 position-relative'>\r\n        <h3\r\n          className='text-center bg-warning text-light p-3 mx-auto'\r\n          style={{ maxWidth: '400px' }}\r\n        >\r\n          {title.toUpperCase() + ' '}{' '}\r\n          {!landing && (\r\n            <Badge variant='light' className='ml-2'>\r\n              {' '}\r\n              {exams.length}\r\n            </Badge>\r\n          )}{' '}\r\n        </h3>\r\n        <div className='mt-5'>\r\n          <div className='d-flex justify-content-around flex-wrap'>\r\n            {exams.length < 1 && (\r\n              <p className='lead text-danger'>\r\n                {' '}\r\n                {title +\r\n                  ' ' +\r\n                  intl.formatMessage({\r\n                    id: 'noExamCreated',\r\n                    defaultMessage: 'are not created'\r\n                  })}{' '}\r\n              </p>\r\n            )}\r\n            {exams.map((exam, i) => (\r\n              <ExamCard\r\n                key={exam.id}\r\n                examId={exam.id}\r\n                imgSrc={\r\n                  exam.categoryType.length > 0\r\n                    ? process.env.REACT_APP_SITE_URL +\r\n                      '/images/bootstrap/featured_0' +\r\n                      (Math.floor(Math.random() * 3) + 1) +\r\n                      '.svg'\r\n                    : process.env.REACT_APP_SITE_URL +\r\n                      '/images/bootstrap/uncat.svg'\r\n                }\r\n                title={exam.title}\r\n                categoryType={\r\n                  exam.categoryType.length > 0\r\n                    ? exam.categoryType\r\n                    : [{ name: 'Uncategorized' }]\r\n                }\r\n                description={exam.description}\r\n                createdAt={exam.startDate}\r\n                endDate={exam.endDate}\r\n                examLoader={examLoader}\r\n                landing={landing}\r\n              />\r\n            ))}\r\n          </div>\r\n          {landing ? (\r\n            <div className='d-flex justify-content-center'>\r\n              <Link to='/exams/category/Featured-2'>\r\n                <Button variant='warning' size='lg' className='text-white'>\r\n                  More Featured Exams...\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div className='my-2 d-flex justify-content-center'>\r\n              {exams.length > 2 ? (\r\n                <Button\r\n                  style={{ height: '50px', width: '150px' }}\r\n                  onClick={() => {\r\n                    handleShow()\r\n                  }}\r\n                >\r\n                  {intl.formatMessage({\r\n                    id: 'btn.more',\r\n                    defaultMessage: 'More...'\r\n                  })}\r\n                  .\r\n                </Button>\r\n              ) : (\r\n                ''\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { injectIntl } from 'react-intl'\r\nimport { connect } from 'react-redux'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport GallaryCard from '../../components/exams/gallary/gallaryCard'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { getAllExamsLoader } from '../../store/exams'\r\n\r\nexport const examType = [\r\n  'Assignment',\r\n  'Weekly',\r\n  'Monthly',\r\n  'Assesment',\r\n  'Term',\r\n  'Test',\r\n  'Final'\r\n]\r\n\r\nexport const examTypeBgColor = [\r\n  'primary',\r\n  'secondary',\r\n  'success',\r\n  'danger',\r\n  'warning',\r\n  'info',\r\n  'dark'\r\n]\r\n\r\nclass ExamLists extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetAllExamsLoader()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <MetaInfo {...RoutesConfig.Exams.metaInfo} />\r\n        {this.props.exams.exams.length < 1 && <CircleLoader />}\r\n        {Object.keys(this.props.exams.exams).map(\r\n          (key) =>\r\n            this.props.exams.exams[key] && (\r\n              <GallaryCard\r\n                key={key}\r\n                title={this.props.intl.formatMessage({\r\n                  id: key,\r\n                  defaultMessage: key\r\n                })}\r\n                exams={this.props.exams.exams[key]}\r\n                examLoader={this.props.onGetAllExamsLoader}\r\n              />\r\n            )\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetAllExamsLoader: () => dispatch(getAllExamsLoader())\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    exams: state.exams\r\n  }\r\n}\r\n\r\nexport default injectIntl(\r\n  connect(mapStateToProps, mapDispatchToProps)(ExamLists)\r\n)\r\n"],"sourceRoot":""}