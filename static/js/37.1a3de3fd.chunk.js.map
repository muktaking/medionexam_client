{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","../node_modules/react-bootstrap/esm/Alert.js","utils/queryRouter.js","config/contact.config.js","../node_modules/react-bootstrap/esm/Jumbotron.js","utils/paymentClass.js","container/courses/paymentCompletionForm.jsx","container/courses/courseFilter.jsx","container/courses/index.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","show","transition","Fade","closeLabel","controllables","Alert","React","forwardRef","uncontrolledProps","ref","_useUncontrolled","useUncontrolled","bsPrefix","className","children","variant","onClose","dismissible","Transition","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","alert","createElement","_extends","role","undefined","classNames","CloseButton","onClick","label","unmountOnExit","in","DivStyledAsH4","divWithClassName","displayName","Link","createWithBsPrefix","Component","SafeAnchor","Heading","useQuery","search","useLocation","useMemo","URLSearchParams","ContactConfig","mobile","email","location","socials","facebook","twitter","instagram","about","Jumbotron","_ref","_classes","_ref$as","as","fluid","classes","ProductType","PaymentGateway","PaymentCompletionForm","showPaymentModalForm","setShowPaymentModalForm","course","useState","loading","setLoading","errorMsg","setErrorMsg","Modal","onHide","Header","closeButton","Title","Body","Button","data","paymentGateway","productType","productId","id","axios","post","then","window","replace","bkashURL","catch","error","message","Image","src","width","to","Footer","CourseFilter","pgCourseType","faculty","dispatch","useDispatch","showFilter","setShowFilter","initialValues","onSubmit","values","setSubmitting","fetchCourseByFilterLoader","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","Form","Group","controlId","Label","Control","type","placeholder","onChange","onBlur","value","Object","PgCourseType","slice","map","pgCourseTypeToString","Faculty","facultyToString","duration","require","relativeTime","moment","styles","position","top","right","zIndex","Index","query","get","useSelector","state","courses","coursesEnrolledByStu","coursesError","isAuthenticated","auth","token","enrollResLoader","setEnrollResLoader","res","setRes","currentPage","setCurrentPage","modalCourse","setModalCourse","setShowPayemntModalForm","showModalMsg","setShowModalMsg","enrolledCoursesId","useEffect","courseResetLoader","fetchCourseEnrolledByStuLoader","fetchCourseLoader","handleModalClose","enrollmentHandler","courseId","baseURL","url","method","response","paginatedCourses","paginate","remarkPlugins","remarkGfm","Toast","style","alt","length","Card","fontSize","fontWeight","Text","Badge","pill","price","discountPricePercentage","Math","ceil","endDate","diff","startDate","humanize","format","indexOf","height","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","page","itemClass","linkClass","prevPageText","nextPageText"],"mappings":"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","file":"static/js/37.1a3de3fd.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst { title: _defaultTitle, description: _defaultDescription } =\r\n  RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar controllables = {\n  show: 'onClose'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, controllables),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      Transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    onClose(false, e);\n  });\n  var alert = React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return React.createElement(Transition, _extends({\n    unmountOnExit: true,\n    ref: ref\n  }, props, {\n    in: show\n  }), alert);\n});\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nAlert.Heading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nexport default Alert;","import React from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nexport function useQuery() {\r\n  const { search } = useLocation()\r\n  return React.useMemo(() => new URLSearchParams(search), [search])\r\n}\r\n","export const ContactConfig = {\r\n  mobile: '+8801521500642',\r\n  email: 'contact@medionexam.com',\r\n  location: 'Sopura, Rajshahi',\r\n  socials: {\r\n    facebook: 'https://www.facebook.com/medionexam/',\r\n    twitter: '#',\r\n    instagram: '#'\r\n  },\r\n  about:\r\n    'MediOnExam (Medical Online Examination) team consists of technical, academic and advisory subteams. Members of Each subteams are dedicated to their work. Learn, Test and Success - is our motto.'\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"fluid\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","export const ProductType = {\r\n  Course: 1,\r\n  Exam: 2,\r\n  Lecture: 0\r\n}\r\n\r\nexport const PaymentGateway = {\r\n  Bkash: 0,\r\n  Rocket: 1,\r\n  Nagad: 2\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Alert, Button, Modal, Image } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { ContactConfig } from '../../config/contact.config'\r\n// import { grantTokenRequestPromise } from '../payment/pgw.bkash'\r\nimport axios from 'axios'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport { PaymentGateway, ProductType } from '../../utils/paymentClass'\r\n\r\nexport default function PaymentCompletionForm({\r\n  showPaymentModalForm,\r\n  setShowPaymentModalForm,\r\n  course\r\n}) {\r\n  const [loading, setLoading] = useState(false)\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n  const handleClose = () => setShowPaymentModalForm(false)\r\n\r\n  const paymentHandler = () => {\r\n    setLoading(true)\r\n    setErrorMsg(null)\r\n    const data = {\r\n      paymentGateway: PaymentGateway.Bkash,\r\n      productType: ProductType.Course,\r\n      productId: course.id,\r\n      ref: 'no-ref'\r\n    }\r\n\r\n    axios\r\n      .post(process.env.REACT_APP_SITE_URL + '/payment/bkash/create', data)\r\n      .then(({ data }) => {\r\n        setLoading(false)\r\n        window.location.replace(data.bkashURL)\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false)\r\n        setErrorMsg(error.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className='paymentCompletionForm'>\r\n      {loading && <CircleLoader />}\r\n      <Modal show={showPaymentModalForm} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Payment Required</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>\r\n            Thanks for choosing this course. For payment we encourage you to\r\n            make payment with Bkash. You will be auto enrolled after successful\r\n            payment.\r\n          </p>\r\n          <div>\r\n            <p className='d-flex justify-content-center'>\r\n              <Button\r\n                variant='outline-danger'\r\n                className='d-flex justify-content-around align-items-center'\r\n                onClick={paymentHandler}\r\n              >\r\n                <span className='mr-4'>Pay With Bkash</span>\r\n                <Image src='/assets/image/payment/bkash-logo.png' width='35' />\r\n              </Button>\r\n            </p>\r\n            {errorMsg && (\r\n              <Alert variant='danger' className='text-center'>\r\n                {errorMsg}\r\n              </Alert>\r\n            )}\r\n            <Alert variant='info' className='text-center'>\r\n              For other options go to <Link to='/paymentfaq'>Payment page</Link>\r\n              <br />\r\n              For any problems or refund, go to{' '}\r\n              <Link to='/help'>Help section</Link> <br /> Contact us with{' '}\r\n              <span>{ContactConfig.mobile}</span>\r\n              <br /> Email us <span>{ContactConfig.email}</span>\r\n            </Alert>\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Go Back\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n","import { Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Form, Jumbotron } from 'react-bootstrap'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport {\r\n  PgCourseType,\r\n  faculty as Faculty,\r\n  facultyToString,\r\n  pgCourseTypeToString\r\n} from '../../utils/faculty'\r\nimport { fetchCourseByFilterLoader } from '../../store/courses'\r\n\r\nexport default function CourseFilter({\r\n  search = '',\r\n  pgCourseType = null,\r\n  faculty = null\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState(false)\r\n  const [showFilter, setShowFilter] = useState(false)\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ search, pgCourseType, faculty }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setLoading(false)\r\n          const { search, pgCourseType, faculty } = values\r\n          dispatch(\r\n            fetchCourseByFilterLoader(\r\n              pgCourseType === '-1' ? null : pgCourseType,\r\n              faculty === '-1' ? null : faculty,\r\n              search\r\n            )\r\n          )\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n          /* and other goodies */\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            {loading && <CircleLoader />}\r\n            <h3>\r\n              <Button\r\n                onClick={() => {\r\n                  setShowFilter(!showFilter)\r\n                }}\r\n              >\r\n                Filter\r\n              </Button>\r\n            </h3>\r\n            <p className='text-muted'>(Click to expand filter options)</p>\r\n            {showFilter && (\r\n              <Jumbotron>\r\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\r\n                  <Form.Label>Search</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder='e.g. Abcde..'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.search}\r\n                  />\r\n                </Form.Group>\r\n                <div className='pl-2'>\r\n                  <Form.Group\r\n                    controlId='courseFilter.pgCourseType'\r\n                    className='mr-2'\r\n                  >\r\n                    <Form.Label>Select Programme</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      name='pgCourseType'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.pgCourseType}\r\n                    >\r\n                      <option value='-1'>All</option>\r\n                      {Object.values(PgCourseType)\r\n                        .slice(1) // removing the first value (All: 0)\r\n                        .map((value) => (\r\n                          <option value={value}>\r\n                            {pgCourseTypeToString(value)}\r\n                          </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='courseFilter.faculty'>\r\n                    <Form.Label>Select Subject</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      name='faculty'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.faculty}\r\n                    >\r\n                      <option value='-1'>All</option>\r\n                      {Object.values(Faculty)\r\n                        .slice(1) // removing the first value (all: 0)\r\n                        .map((value) => (\r\n                          <option value={value}>\r\n                            {facultyToString(value)}\r\n                          </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className='mt-1 d-flex justify-content-center'>\r\n                  <Button type='submit'>Apply</Button>\r\n                </div>\r\n              </Jumbotron>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Alert, Badge, Button, Card, Modal, Toast } from 'react-bootstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport remarkGfm from 'remark-gfm'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport {\r\n  courseResetLoader,\r\n  fetchCourseByFilterLoader,\r\n  fetchCourseEnrolledByStuLoader,\r\n  fetchCourseLoader\r\n} from '../../store/courses'\r\nimport { facultyToString, pgCourseTypeToString } from '../../utils/faculty'\r\nimport CourseFilter from './courseFilter'\r\nimport { paginate } from '../../utils/paginate'\r\nimport Pagination from 'react-js-pagination'\r\nimport { useQuery } from '../../utils/queryRouter'\r\nimport PaymentCompletionForm from './paymentCompletionForm'\r\nconst duration = require('dayjs/plugin/duration')\r\nconst relativeTime = require('dayjs/plugin/relativeTime')\r\nmoment.extend(relativeTime)\r\nmoment.extend(duration)\r\n\r\n//styles to show toast message\r\nconst styles = {\r\n  position: 'fixed',\r\n  top: '70px',\r\n  right: '10px',\r\n  zIndex: 100\r\n}\r\n\r\n/**\r\n * @returns nothing\r\n */\r\nexport default function Index() {\r\n  const dispatch = useDispatch()\r\n  let query = useQuery()\r\n  const pgCourseType = query.get('pgCourseType')\r\n  const faculty = query.get('faculty')\r\n  const search = query.get('search')\r\n  const loading = useSelector((state) => state.courses.loading)\r\n  const courses = useSelector((state) => state.courses.courses)\r\n  const coursesEnrolledByStu = useSelector(\r\n    (state) => state.courses.coursesEnrolledByStu\r\n  )\r\n  const coursesError = useSelector((state) => state.courses.error)\r\n  const isAuthenticated = useSelector((state) => state.auth.token !== null)\r\n  const [enrollResLoader, setEnrollResLoader] = useState(false)\r\n  const [res, setRes] = useState(null) // get server response after enrollment request by student\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [modalCourse, setModalCourse] = useState(null)\r\n  const [showPaymentModalForm, setShowPayemntModalForm] = useState(false)\r\n  const [showModalMsg, setShowModalMsg] = useState(null) // show modal\r\n  const enrolledCoursesId = coursesEnrolledByStu\r\n    ? coursesEnrolledByStu.map((course) => course.id)\r\n    : null\r\n  const pageSize = 5\r\n\r\n  useEffect(() => {\r\n    dispatch(courseResetLoader()) // reset course error msg\r\n    dispatch(fetchCourseEnrolledByStuLoader())\r\n    if (pgCourseType || faculty || search) {\r\n      return dispatch(fetchCourseByFilterLoader(pgCourseType, faculty, search))\r\n    }\r\n\r\n    dispatch(fetchCourseLoader()) // fetch courses\r\n  }, [dispatch, faculty, pgCourseType, search])\r\n\r\n  const handleClose = () => {\r\n    setRes(null)\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setShowModalMsg(null)\r\n  }\r\n  const enrollmentHandler = (courseId) => {\r\n    setEnrollResLoader(true)\r\n\r\n    axios({\r\n      baseURL: process.env.REACT_APP_SITE_URL,\r\n      url: '/courses/enroll/' + courseId,\r\n      method: 'patch'\r\n    })\r\n      .then((response) => {\r\n        setEnrollResLoader(false)\r\n        setRes(response.data.message)\r\n      })\r\n      .catch((error) => {\r\n        setEnrollResLoader(false)\r\n        setRes(\r\n          'Sorry. Enrollment to this course is not possible due to server error. Please contact with admin.'\r\n        )\r\n      })\r\n  }\r\n  const paginatedCourses = paginate(courses, currentPage, pageSize)\r\n  return (\r\n    <div>\r\n      {/* SEO section */}\r\n      {<MetaInfo {...RoutesConfig.Course.metaInfo} />}\r\n\r\n      {/* Modal section --> shows paymentForm after clicking 'Enrollment' button */}\r\n      {showPaymentModalForm && (\r\n        <PaymentCompletionForm\r\n          showPaymentModalForm={showPaymentModalForm}\r\n          setShowPaymentModalForm={setShowPayemntModalForm}\r\n          course={modalCourse}\r\n          enrollmentHandler={enrollmentHandler}\r\n        />\r\n      )}\r\n\r\n      {/* Modal section --> shows details of a course after clicking 'More' button */}\r\n      <Modal show={showModalMsg} onHide={handleModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n            {showModalMsg}\r\n          </ReactMarkdown>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary ' onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Toast section --> shows server response after enrollment request */}\r\n      <Toast show={res} onClose={handleClose} style={styles}>\r\n        <Toast.Header className='bg-warning text-white'>\r\n          <img src='holder.js/20x20?text=%20' className='rounded me-2' alt='' />\r\n          <strong className='me-auto'>Server Response</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{res}</Toast.Body>\r\n      </Toast>\r\n\r\n      {/* Main Section */}\r\n      <h3 className='text-center heading'>Available Courses</h3>\r\n      {enrollResLoader && <CircleLoader />}\r\n      {loading && <CircleLoader />}\r\n      <CourseFilter pgCourseType={pgCourseType} faculty={faculty} />\r\n      <div className='d-flex justify-content-around flex-wrap mt-3'>\r\n        {coursesError ? ( // show courses error messsage\r\n          <p className='text-danger'>\r\n            <span>Courses can not be retrived.</span>\r\n            <hr />\r\n            <span>Possible Reason: {coursesError}</span>\r\n          </p>\r\n        ) : courses && courses.length < 1 ? (\r\n          <Alert variant='danger'>No Courses Available</Alert>\r\n        ) : (\r\n          paginatedCourses.map((course) => (\r\n            <>\r\n              <Card className='my-3' style={{ width: '350px' }}>\r\n                <Card.Body>\r\n                  <Link to={`/courses/${course.id}`}>\r\n                    <Card.Title\r\n                      className='text-center'\r\n                      style={{ fontSize: '1.4rem', fontWeight: '900' }}\r\n                    >\r\n                      {course.title}\r\n                    </Card.Title>\r\n                  </Link>\r\n                  <Card.Text className=''>\r\n                    <div className='text-right mb-2'>\r\n                      {course.pgCourseType !== 0 && (\r\n                        <Badge pill variant='dark' className='mr-2'>\r\n                          {pgCourseTypeToString(course.pgCourseType)}\r\n                        </Badge>\r\n                      )}\r\n                      {course.faculty !== 0 && (\r\n                        <Badge pill variant='dark'>\r\n                          {facultyToString(course.faculty)}\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Regular Price:{' '}\r\n                        {course.price ? course.price + ' Taka' : 'Free'}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {course.price && course.discountPricePercentage ? (\r\n                      <div className='mt-1'>\r\n                        <span className='bg-secondary text-white px-1'>\r\n                          Special Price:{' '}\r\n                          {course.price -\r\n                            Math.ceil(\r\n                              (course.price * course.discountPricePercentage) /\r\n                                100\r\n                            ) +\r\n                            ' Taka'}{' '}\r\n                        </span>\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n\r\n                    <div className='my-1'>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Duration:{' '}\r\n                        {moment\r\n                          .duration(\r\n                            moment(course.endDate).diff(course.startDate)\r\n                          )\r\n                          .humanize() + ' long.'}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Start: {moment(course.startDate).format('DD-MMM-YY')}\r\n                      </span>\r\n                    </div>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <p className='text-center'>\r\n                      <Button\r\n                        variant='outline-primary'\r\n                        onClick={() => {\r\n                          setShowModalMsg(course.description)\r\n                        }}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </p>\r\n                  </Card.Text>\r\n                  <hr />\r\n                  <Card.Text className='text-center mt-2'>\r\n                    <Link to={'/exams/courses/' + course.id}>\r\n                      <Button variant='primary'>Go to Exams</Button>\r\n                    </Link>\r\n                  </Card.Text>\r\n                  {isAuthenticated && (\r\n                    <>\r\n                      <hr />\r\n                      <div className='d-flex justify-content-center align-items-center'>\r\n                        {enrolledCoursesId &&\r\n                        enrolledCoursesId.indexOf(course.id) > -1 ? (\r\n                          <p className='text-success text-center'>\r\n                            Already Enrolled\r\n                          </p>\r\n                        ) : (\r\n                          <Button\r\n                            variant='primary'\r\n                            style={{\r\n                              width: '300px',\r\n                              height: '55px',\r\n                              fontSize: '18px'\r\n                            }}\r\n                            onClick={() => {\r\n                              if (course.price) {\r\n                                setShowPayemntModalForm(true)\r\n                                setModalCourse(course)\r\n                              } else enrollmentHandler(course.id)\r\n                            }}\r\n                          >\r\n                            Enroll\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </>\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className='d-flex justify-content-center mt-3'>\r\n        <Pagination\r\n          activePage={currentPage}\r\n          itemsCountPerPage={pageSize}\r\n          totalItemsCount={courses ? courses.length : null}\r\n          pageRangeDisplayed={2}\r\n          onChange={(page) => {\r\n            setCurrentPage(page)\r\n          }}\r\n          itemClass='page-item'\r\n          linkClass='page-link'\r\n          prevPageText='Previous'\r\n          nextPageText='Next'\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}