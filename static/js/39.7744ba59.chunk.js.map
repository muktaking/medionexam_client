{"version":3,"sources":["config/routes.config.js","config/env.config.js","components/seo/metainfo.js","../node_modules/react-bootstrap/esm/Alert.js","config/contact.config.js","../node_modules/react-bootstrap/esm/Jumbotron.js","utils/paymentClass.js","container/courses/paymentCompletionForm.jsx","container/courses/courseFilter.jsx","container/courses/index.js"],"names":["RoutesConfig","Home","metaInfo","title","description","Exams","Dashboard","Course","Reports","Profile","Settings","Category","Question","CourseBuilder","RoutineBuilder","ExamBuilder","ExamEdit","Login","Signup","AUTHOR_NAME","process","_defaultTitle","_defaultDescription","MetaInfo","meta","defer","lang","Helmet","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","show","transition","Fade","closeLabel","controllables","Alert","React","forwardRef","uncontrolledProps","ref","_useUncontrolled","useUncontrolled","bsPrefix","className","children","variant","onClose","dismissible","Transition","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","alert","createElement","_extends","role","undefined","classNames","CloseButton","onClick","label","unmountOnExit","in","DivStyledAsH4","divWithClassName","displayName","Link","createWithBsPrefix","Component","SafeAnchor","Heading","ContactConfig","mobile","email","location","socials","facebook","twitter","instagram","about","Jumbotron","_ref","_classes","_ref$as","as","fluid","classes","ProductType","PaymentGateway","PaymentCompletionForm","showPaymentModalForm","setShowPaymentModalForm","course","Modal","onHide","Header","closeButton","Title","Body","PaymentCompletionFormModalContent","Footer","Button","useState","loading","setLoading","errorMsg","setErrorMsg","Badge","discountPricePercentage","price","Math","ceil","data","paymentGateway","productType","productId","id","axios","post","then","window","replace","bkashURL","catch","error","message","Image","src","width","to","CourseFilter","search","pgCourseType","faculty","dispatch","useDispatch","showFilter","setShowFilter","initialValues","onSubmit","values","setSubmitting","fetchCourseByFilterLoader","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","Form","Group","controlId","Label","Control","type","placeholder","onChange","onBlur","value","Object","PgCourseType","slice","map","pgCourseTypeToString","Faculty","facultyToString","duration","require","relativeTime","moment","styles","position","top","right","zIndex","Index","pageNumberQueryToRoute","usePageNumberQueryToRoute","query","useQuery","get","pageNumber","getPageNumberQueryValue","useSelector","state","courses","coursesEnrolledByStu","coursesError","isAuthenticated","auth","token","enrollResLoader","setEnrollResLoader","res","setRes","currentPage","setCurrentPage","modalCourse","setModalCourse","setShowPayemntModalForm","showModalMsg","setShowModalMsg","enrolledCoursesId","useEffect","courseResetLoader","fetchCourseEnrolledByStuLoader","fetchCourseLoader","handleModalClose","enrollmentHandler","courseId","baseURL","url","method","response","paginatedCourses","paginate","remarkPlugins","remarkGfm","Toast","style","alt","length","Card","fontSize","fontWeight","Text","pill","endDate","diff","startDate","humanize","format","indexOf","height","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","page","add","itemClass","linkClass","prevPageText","nextPageText"],"mappings":"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","file":"static/js/39.7744ba59.chunk.js","sourcesContent":["export const RoutesConfig = {\r\n  Home: {\r\n    metaInfo: {\r\n      title: 'Online Exam Platform',\r\n      description:\r\n        'Online Exam Platform - participate into exam from anywhere anytime with extensive solve immediately. Question and answer is authentic with help of talented mentor.'\r\n    }\r\n  },\r\n  Exams: {\r\n    metaInfo: {\r\n      title: 'Lists Of Exams',\r\n      description:\r\n        'Lists of all available exams. Participate into the exams. Test your skill and find the gap.'\r\n    }\r\n  },\r\n  Dashboard: {\r\n    metaInfo: {\r\n      title: 'Dashboard',\r\n      description:\r\n        'Get all contents at one place. Your routine, reports, activity, featured & latest exam and many more.'\r\n    }\r\n  },\r\n  Course: {\r\n    metaInfo: {\r\n      title: 'Course',\r\n      description:\r\n        'Enroll for your desire courses and prepare for upcoming exams.'\r\n    }\r\n  },\r\n  Reports: {\r\n    metaInfo: {\r\n      title: 'Reports',\r\n      description:\r\n        'In depth reports all of your exam. Take a look and get the gap.'\r\n    }\r\n  },\r\n  Profile: {\r\n    metaInfo: {\r\n      title: 'Profile',\r\n      description: 'Update the profile and get a better user exprience.'\r\n    }\r\n  },\r\n  Settings: {\r\n    metaInfo: {\r\n      title: 'Settings'\r\n    }\r\n  },\r\n  Category: {\r\n    metaInfo: {\r\n      title: 'CategoryBuilder'\r\n    }\r\n  },\r\n  Question: {\r\n    metaInfo: {\r\n      title: 'QuestionBuilder'\r\n    }\r\n  },\r\n  CourseBuilder: {\r\n    metaInfo: {\r\n      title: 'CourseBuilder'\r\n    }\r\n  },\r\n  RoutineBuilder: {\r\n    metaInfo: {\r\n      title: 'RoutineBuilder'\r\n    }\r\n  },\r\n  ExamBuilder: {\r\n    metaInfo: {\r\n      title: 'ExamBuilder'\r\n    }\r\n  },\r\n  ExamEdit: {\r\n    metaInfo: {\r\n      title: 'ExamEdit'\r\n    }\r\n  },\r\n  Login: {\r\n    metaInfo: {\r\n      title: 'Login',\r\n      description: 'Login to access the app.'\r\n    }\r\n  },\r\n  Signup: {\r\n    metaInfo: {\r\n      title: 'Signup',\r\n      description: 'To use the app fully, You have to signup '\r\n    }\r\n  }\r\n}\r\n","export const APP_NAME = process.env.REACT_APP_NAME\r\nexport const DEFAULT_LOCALE = process.env.REACT_APP_LANG\r\nexport const BASE_URL = process.env.REACT_APP_BASE_URL\r\nexport const AUTHOR_NAME = process.env.REACT_APP_AUTHOR_NAME\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {\r\n  APP_NAME,\r\n  AUTHOR_NAME,\r\n  BASE_URL,\r\n  DEFAULT_LOCALE\r\n} from '../../config/env.config'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\n\r\nconst { title: _defaultTitle, description: _defaultDescription } =\r\n  RoutesConfig.Home.metaInfo\r\n\r\nconst MetaInfo = ({\r\n  meta = [],\r\n  defer = false,\r\n  lang = DEFAULT_LOCALE,\r\n  title = _defaultTitle,\r\n  description = _defaultDescription\r\n}) => (\r\n  <Helmet\r\n    defer={defer}\r\n    title={title}\r\n    htmlAttributes={{ lang }}\r\n    titleTemplate={`%s | ${APP_NAME}`}\r\n    meta={[\r\n      {\r\n        name: 'description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:description',\r\n        content: description\r\n      },\r\n      {\r\n        property: 'og:title',\r\n        content: title\r\n      },\r\n      {\r\n        property: 'og:type',\r\n        content: 'website'\r\n      },\r\n      {\r\n        property: 'og:image',\r\n        content: `${BASE_URL}/logo.png`\r\n      },\r\n      {\r\n        name: 'author',\r\n        content: AUTHOR_NAME\r\n      }\r\n    ].concat(meta)}\r\n  />\r\n)\r\n\r\nexport default MetaInfo\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nvar controllables = {\n  show: 'onClose'\n};\nvar Alert = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, controllables),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      show = _useUncontrolled.show,\n      closeLabel = _useUncontrolled.closeLabel,\n      className = _useUncontrolled.className,\n      children = _useUncontrolled.children,\n      variant = _useUncontrolled.variant,\n      onClose = _useUncontrolled.onClose,\n      dismissible = _useUncontrolled.dismissible,\n      Transition = _useUncontrolled.transition,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"show\", \"closeLabel\", \"className\", \"children\", \"variant\", \"onClose\", \"dismissible\", \"transition\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  var handleClose = useEventCallback(function (e) {\n    onClose(false, e);\n  });\n  var alert = React.createElement(\"div\", _extends({\n    role: \"alert\"\n  }, Transition ? props : undefined, {\n    className: classNames(className, prefix, variant && prefix + \"-\" + variant, dismissible && prefix + \"-dismissible\")\n  }), dismissible && React.createElement(CloseButton, {\n    onClick: handleClose,\n    label: closeLabel\n  }), children);\n  if (!Transition) return show ? alert : null;\n  return React.createElement(Transition, _extends({\n    unmountOnExit: true,\n    ref: ref\n  }, props, {\n    in: show\n  }), alert);\n});\nvar DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nAlert.Link = createWithBsPrefix('alert-link', {\n  Component: SafeAnchor\n});\nAlert.Heading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nexport default Alert;","export const ContactConfig = {\r\n  mobile: '+8801521500642',\r\n  email: 'contact@medionexam.com',\r\n  location: 'Sopura, Rajshahi',\r\n  socials: {\r\n    facebook: 'https://www.facebook.com/medionexam/',\r\n    twitter: '#',\r\n    instagram: '#'\r\n  },\r\n  about:\r\n    'MediOnExam (Medical Online Examination) team consists of technical, academic and advisory subteams. Members of Each subteams are dedicated to their work. Learn, Test and Success - is our motto.'\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"fluid\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","export const ProductType = {\r\n  Course: 1,\r\n  Exam: 2,\r\n  Lecture: 0\r\n}\r\n\r\nexport const PaymentGateway = {\r\n  Bkash: 0,\r\n  Rocket: 1,\r\n  Nagad: 2\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Alert, Button, Modal, Image, Badge } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { ContactConfig } from '../../config/contact.config'\r\n// import { grantTokenRequestPromise } from '../payment/pgw.bkash'\r\nimport axios from 'axios'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport { PaymentGateway, ProductType } from '../../utils/paymentClass'\r\n\r\nexport default function PaymentCompletionForm({\r\n  showPaymentModalForm,\r\n  setShowPaymentModalForm,\r\n  course\r\n}) {\r\n  const handleClose = () => setShowPaymentModalForm(false)\r\n\r\n  return (\r\n    <div className='paymentCompletionForm'>\r\n      <Modal show={showPaymentModalForm} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Payment Required</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <PaymentCompletionFormModalContent course={course} />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Go Back\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function PaymentCompletionFormModalContent({ course }) {\r\n  const [loading, setLoading] = useState(false)\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n  const paymentHandler = () => {\r\n    setLoading(true)\r\n    setErrorMsg(null)\r\n    const data = {\r\n      paymentGateway: PaymentGateway.Bkash,\r\n      productType: ProductType.Course,\r\n      productId: course.id,\r\n      ref: 'no-ref'\r\n    }\r\n\r\n    axios\r\n      .post(process.env.REACT_APP_SITE_URL + '/payment/bkash/create', data)\r\n      .then(({ data }) => {\r\n        setLoading(false)\r\n        window.location.replace(data.bkashURL)\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false)\r\n        setErrorMsg(error.message)\r\n      })\r\n  }\r\n  return (\r\n    <>\r\n      {loading && <CircleLoader />}\r\n      <p>\r\n        <span>Thanks for choosing</span>\r\n        <Badge>{course.title}</Badge>\r\n        <span className=''>\r\n          . You have to pay only{' '}\r\n          {course.discountPricePercentage ? ( //make strikethrough text if discount present\r\n            <s className='text-danger'>{course.price + ' Taka'}</s>\r\n          ) : (\r\n            course.price + ' Taka'\r\n          )}\r\n        </span>\r\n        {course.price && course.discountPricePercentage ? (\r\n          <Badge variant='warning' className='mx-2 py-1'>\r\n            {` ${\r\n              course.price -\r\n              Math.ceil((course.price * course.discountPricePercentage) / 100)\r\n            } Taka (With discount- ${course.discountPricePercentage} %)`}\r\n          </Badge>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <span>. You will be auto enrolled after successful payment.</span>\r\n      </p>\r\n      <div>\r\n        <p className='d-flex justify-content-center'>\r\n          <Button\r\n            variant='outline-danger'\r\n            className='d-flex justify-content-around align-items-center'\r\n            onClick={paymentHandler}\r\n          >\r\n            <span className='mr-4'>Pay With Bkash</span>\r\n            <Image src='/assets/image/payment/bkash-logo.png' width='35' />\r\n          </Button>\r\n        </p>\r\n        {errorMsg && (\r\n          <Alert variant='danger' className='text-center'>\r\n            {errorMsg}\r\n          </Alert>\r\n        )}\r\n        <Alert variant='info' className='text-center'>\r\n          For other options go to <Link to='/paymentfaq'>Payment page</Link>\r\n          <br />\r\n          For any problems or refund, go to <Link to='/help'>\r\n            Help section\r\n          </Link>{' '}\r\n          <br /> Contact us with <span>{ContactConfig.mobile}</span>\r\n          <br /> Email us <span>{ContactConfig.email}</span>\r\n        </Alert>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { Formik } from 'formik'\r\nimport React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Form, Jumbotron } from 'react-bootstrap'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport {\r\n  PgCourseType,\r\n  faculty as Faculty,\r\n  facultyToString,\r\n  pgCourseTypeToString\r\n} from '../../utils/faculty'\r\nimport { fetchCourseByFilterLoader } from '../../store/courses'\r\n\r\n//centering fixed element\r\n// const styles = {\r\n//   container: {\r\n//     width: '300px',\r\n//     position: 'fixed',\r\n//     left: '50%',\r\n//     zIndex: 1,\r\n//     marginLeft: '-150px',\r\n//     font: 'center'\r\n//   }\r\n// }\r\n\r\nexport default function CourseFilter({\r\n  search = '',\r\n  pgCourseType = null,\r\n  faculty = null\r\n}) {\r\n  const dispatch = useDispatch()\r\n  const [loading, setLoading] = useState(false)\r\n  const [showFilter, setShowFilter] = useState(false)\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{ search, pgCourseType, faculty }}\r\n        onSubmit={(values, { setSubmitting }) => {\r\n          setLoading(false)\r\n          const { search, pgCourseType, faculty } = values\r\n          dispatch(\r\n            fetchCourseByFilterLoader(\r\n              pgCourseType === '-1' ? null : pgCourseType,\r\n              faculty === '-1' ? null : faculty,\r\n              search\r\n            )\r\n          )\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting\r\n          /* and other goodies */\r\n        }) => (\r\n          <Form onSubmit={handleSubmit}>\r\n            {loading && <CircleLoader />}\r\n            <h3 className='text-center'>\r\n              <Button\r\n                onClick={() => {\r\n                  setShowFilter(!showFilter)\r\n                }}\r\n              >\r\n                Filter\r\n              </Button>\r\n            </h3>\r\n            {/* <p className='text-muted'>(Click to expand filter options)</p> */}\r\n            {showFilter && (\r\n              <Jumbotron>\r\n                <Form.Group className='mb-3' controlId='formBasicPassword'>\r\n                  <Form.Label>Search</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    name='search'\r\n                    placeholder='e.g. Abcde..'\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.search}\r\n                  />\r\n                </Form.Group>\r\n                <div className='pl-2'>\r\n                  <Form.Group\r\n                    controlId='courseFilter.pgCourseType'\r\n                    className='mr-2'\r\n                  >\r\n                    <Form.Label>Select Programme</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      name='pgCourseType'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.pgCourseType}\r\n                    >\r\n                      <option value='-1'>All</option>\r\n                      {Object.values(PgCourseType)\r\n                        .slice(1) // removing the first value (All: 0)\r\n                        .map((value) => (\r\n                          <option value={value}>\r\n                            {pgCourseTypeToString(value)}\r\n                          </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                  <Form.Group controlId='courseFilter.faculty'>\r\n                    <Form.Label>Select Subject</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      name='faculty'\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      value={values.faculty}\r\n                    >\r\n                      <option value='-1'>All</option>\r\n                      {Object.values(Faculty)\r\n                        .slice(1) // removing the first value (all: 0)\r\n                        .map((value) => (\r\n                          <option value={value}>\r\n                            {facultyToString(value)}\r\n                          </option>\r\n                        ))}\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n                </div>\r\n                <div className='mt-1 d-flex justify-content-around'>\r\n                  <Button type='submit'>Apply</Button>\r\n                  <Button\r\n                    onClick={() => {\r\n                      setShowFilter(false)\r\n                    }}\r\n                  >\r\n                    close\r\n                  </Button>\r\n                </div>\r\n              </Jumbotron>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n","import axios from 'axios'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Alert, Badge, Button, Card, Modal, Toast } from 'react-bootstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport remarkGfm from 'remark-gfm'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport {\r\n  courseResetLoader,\r\n  fetchCourseByFilterLoader,\r\n  fetchCourseEnrolledByStuLoader,\r\n  fetchCourseLoader\r\n} from '../../store/courses'\r\nimport { facultyToString, pgCourseTypeToString } from '../../utils/faculty'\r\nimport CourseFilter from './courseFilter'\r\nimport { paginate } from '../../utils/paginate'\r\nimport Pagination from 'react-js-pagination'\r\nimport { useQuery } from '../../utils/queryRouter'\r\nimport PaymentCompletionForm from './paymentCompletionForm'\r\nimport usePageNumberQueryToRoute from '../../utils/usePageNumberQueryToRoute'\r\nconst duration = require('dayjs/plugin/duration')\r\nconst relativeTime = require('dayjs/plugin/relativeTime')\r\nmoment.extend(relativeTime)\r\nmoment.extend(duration)\r\n\r\n//styles to show toast message\r\nconst styles = {\r\n  position: 'fixed',\r\n  top: '70px',\r\n  right: '10px',\r\n  zIndex: 100\r\n}\r\n\r\n/**\r\n * @returns nothing\r\n */\r\nexport default function Index() {\r\n  const pageNumberQueryToRoute = usePageNumberQueryToRoute()\r\n  const dispatch = useDispatch()\r\n  let query = useQuery()\r\n  const pgCourseType = query.get('pgCourseType')\r\n  const faculty = query.get('faculty')\r\n  const search = query.get('search')\r\n  const pageNumber = pageNumberQueryToRoute.getPageNumberQueryValue\r\n  const loading = useSelector((state) => state.courses.loading)\r\n  const courses = useSelector((state) => state.courses.courses)\r\n  const coursesEnrolledByStu = useSelector(\r\n    (state) => state.courses.coursesEnrolledByStu\r\n  )\r\n  const coursesError = useSelector((state) => state.courses.error)\r\n  const isAuthenticated = useSelector((state) => state.auth.token !== null)\r\n  const [enrollResLoader, setEnrollResLoader] = useState(false)\r\n  const [res, setRes] = useState(null) // get server response after enrollment request by student\r\n  const [currentPage, setCurrentPage] = useState(pageNumber ? pageNumber : 1)\r\n  const [modalCourse, setModalCourse] = useState(null)\r\n  const [showPaymentModalForm, setShowPayemntModalForm] = useState(false)\r\n  const [showModalMsg, setShowModalMsg] = useState(null) // show modal\r\n  const enrolledCoursesId = coursesEnrolledByStu\r\n    ? coursesEnrolledByStu.map((course) => course.id)\r\n    : null\r\n  const pageSize = 5\r\n\r\n  useEffect(() => {\r\n    dispatch(courseResetLoader()) // reset course error msg\r\n    dispatch(fetchCourseEnrolledByStuLoader())\r\n    if (pgCourseType || faculty || search) {\r\n      return dispatch(fetchCourseByFilterLoader(pgCourseType, faculty, search))\r\n    }\r\n\r\n    dispatch(fetchCourseLoader()) // fetch courses\r\n  }, [dispatch, faculty, pgCourseType, search])\r\n\r\n  const handleClose = () => {\r\n    setRes(null)\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    setShowModalMsg(null)\r\n  }\r\n  const enrollmentHandler = (courseId) => {\r\n    setEnrollResLoader(true)\r\n\r\n    axios({\r\n      baseURL: process.env.REACT_APP_SITE_URL,\r\n      url: '/courses/enroll/' + courseId,\r\n      method: 'patch'\r\n    })\r\n      .then((response) => {\r\n        setEnrollResLoader(false)\r\n        setRes(response.data.message)\r\n      })\r\n      .catch((error) => {\r\n        setEnrollResLoader(false)\r\n        setRes(\r\n          'Sorry. Enrollment to this course is not possible due to server error. Please contact with admin.'\r\n        )\r\n      })\r\n  }\r\n  const paginatedCourses = paginate(courses, currentPage, pageSize)\r\n  return (\r\n    <div>\r\n      {/* SEO section */}\r\n      {<MetaInfo {...RoutesConfig.Course.metaInfo} />}\r\n\r\n      {/* Modal section --> shows paymentForm after clicking 'Enrollment' button */}\r\n      {showPaymentModalForm && (\r\n        <PaymentCompletionForm\r\n          showPaymentModalForm={showPaymentModalForm}\r\n          setShowPaymentModalForm={setShowPayemntModalForm}\r\n          course={modalCourse}\r\n          enrollmentHandler={enrollmentHandler}\r\n        />\r\n      )}\r\n\r\n      {/* Modal section --> shows details of a course after clicking 'More' button */}\r\n      <Modal show={showModalMsg} onHide={handleModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ReactMarkdown remarkPlugins={[remarkGfm]}>\r\n            {showModalMsg}\r\n          </ReactMarkdown>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary ' onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Toast section --> shows server response after enrollment request */}\r\n      <Toast show={res} onClose={handleClose} style={styles}>\r\n        <Toast.Header className='bg-warning text-white'>\r\n          <img src='holder.js/20x20?text=%20' className='rounded me-2' alt='' />\r\n          <strong className='me-auto'>Server Response</strong>\r\n        </Toast.Header>\r\n        <Toast.Body>{res}</Toast.Body>\r\n      </Toast>\r\n\r\n      {/* Main Section */}\r\n      <h3 className='text-center heading'>Available Courses</h3>\r\n      {enrollResLoader && <CircleLoader />}\r\n      {loading && <CircleLoader />}\r\n      <CourseFilter pgCourseType={pgCourseType} faculty={faculty} />\r\n      <div className='d-flex justify-content-around flex-wrap mt-3'>\r\n        {coursesError ? ( // show courses error messsage\r\n          <p className='text-danger'>\r\n            <span>Courses can not be retrived.</span>\r\n            <hr />\r\n            <span>Possible Reason: {coursesError}</span>\r\n          </p>\r\n        ) : courses && courses.length < 1 ? (\r\n          <Alert variant='danger'>No Courses Available</Alert>\r\n        ) : (\r\n          paginatedCourses.map((course) => (\r\n            <>\r\n              <Card className='my-3' style={{ width: '350px' }}>\r\n                <Card.Body>\r\n                  <Link to={`/courses/${course.id}`}>\r\n                    <Card.Title\r\n                      className='text-center'\r\n                      style={{ fontSize: '1.4rem', fontWeight: '900' }}\r\n                    >\r\n                      {course.title}\r\n                    </Card.Title>\r\n                  </Link>\r\n                  <Card.Text className=''>\r\n                    <div className='text-right mb-2'>\r\n                      {course.pgCourseType !== 0 && (\r\n                        <Badge pill variant='dark' className='mr-2'>\r\n                          {pgCourseTypeToString(course.pgCourseType)}\r\n                        </Badge>\r\n                      )}\r\n                      {course.faculty !== 0 && (\r\n                        <Badge pill variant='dark'>\r\n                          {facultyToString(course.faculty)}\r\n                        </Badge>\r\n                      )}\r\n                    </div>\r\n                    <div>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Regular Price:{' '}\r\n                        {course.price ? course.price + ' Taka' : 'Free'}\r\n                      </span>\r\n                    </div>\r\n\r\n                    {course.price && course.discountPricePercentage ? (\r\n                      <div className='mt-1'>\r\n                        <span className='bg-secondary text-white px-1'>\r\n                          Special Price:{' '}\r\n                          {course.price -\r\n                            Math.ceil(\r\n                              (course.price * course.discountPricePercentage) /\r\n                                100\r\n                            ) +\r\n                            ' Taka'}{' '}\r\n                        </span>\r\n                      </div>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n\r\n                    <div className='my-1'>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Duration:{' '}\r\n                        {moment\r\n                          .duration(\r\n                            moment(course.endDate).diff(course.startDate)\r\n                          )\r\n                          .humanize() + ' long.'}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className='bg-light text-dark px-1'>\r\n                        Start: {moment(course.startDate).format('DD-MMM-YY')}\r\n                      </span>\r\n                    </div>\r\n                  </Card.Text>\r\n                  <Card.Text>\r\n                    <p className='text-center'>\r\n                      <Button\r\n                        variant='outline-primary'\r\n                        onClick={() => {\r\n                          setShowModalMsg(course.description)\r\n                        }}\r\n                      >\r\n                        Details\r\n                      </Button>\r\n                    </p>\r\n                  </Card.Text>\r\n                  <hr />\r\n                  <Card.Text className='text-center mt-2'>\r\n                    <Link to={'/exams/courses/' + course.id}>\r\n                      <Button variant='primary'>Go to Exams</Button>\r\n                    </Link>\r\n                  </Card.Text>\r\n                  {isAuthenticated && (\r\n                    <>\r\n                      <hr />\r\n                      <div className='d-flex justify-content-center align-items-center'>\r\n                        {enrolledCoursesId &&\r\n                        enrolledCoursesId.indexOf(course.id) > -1 ? (\r\n                          <p className='text-success text-center'>\r\n                            Already Enrolled\r\n                          </p>\r\n                        ) : (\r\n                          <Button\r\n                            variant='primary'\r\n                            style={{\r\n                              width: '300px',\r\n                              height: '55px',\r\n                              fontSize: '18px'\r\n                            }}\r\n                            onClick={() => {\r\n                              if (course.price) {\r\n                                setShowPayemntModalForm(true)\r\n                                setModalCourse(course)\r\n                              } else enrollmentHandler(course.id)\r\n                            }}\r\n                          >\r\n                            Enroll\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            </>\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className='d-flex justify-content-center mt-3'>\r\n        <Pagination\r\n          activePage={currentPage}\r\n          itemsCountPerPage={pageSize}\r\n          totalItemsCount={courses ? courses.length : null}\r\n          pageRangeDisplayed={2}\r\n          onChange={(page) => {\r\n            pageNumberQueryToRoute.add(page)\r\n            setCurrentPage(page)\r\n          }}\r\n          itemClass='page-item'\r\n          linkClass='page-link'\r\n          prevPageText='Previous'\r\n          nextPageText='Next'\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}