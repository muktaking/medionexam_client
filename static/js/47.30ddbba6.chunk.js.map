{"version":3,"sources":["components/customSpinner/multiSquare/multiSquareLoader.js","components/customSpinner/multiSquare/multiSquareLoader.module.scss","container/payment/refund.js","container/payment/payment.admin.js"],"names":["MultiSquareLoader","className","Styles","content","loader","module","exports","Refund","paymentId","trxId","amount","useState","loading","setLoading","refundData","setRefundData","refundRes","setRefundRes","amountRef","useRef","skuRef","reasonRef","useEffect","axios","get","process","then","data","catch","error","console","log","src","name","Form","Group","controlId","Label","Control","type","placeholder","ref","defaultValue","Button","variant","onClick","post","current","value","sku","reason","response","message","PaymentAdmin","payments","setPayments","refundForm","setRefundForm","show","setShow","paymentIdDetail","setPaymentIdDetail","currentPage","setCurrentPage","handleClose","handleShow","paginatedPayments","paginate","Modal","onHide","Header","closeButton","Title","Body","Footer","Table","striped","bordered","hover","map","payment","index","id","Object","keys","key","disabled","paymentAmount","activePage","itemsCountPerPage","totalItemsCount","length","pageRangeDisplayed","onChange","page","itemClass","linkClass","prevPageText","nextPageText"],"mappings":"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","file":"static/js/47.30ddbba6.chunk.js","sourcesContent":["import React from 'react'\r\nimport Styles from './multiSquareLoader.module.scss'\r\n\r\nexport default function MultiSquareLoader() {\r\n  return (\r\n    <div className={Styles.content}>\r\n      <span className={Styles.loader}></span>\r\n    </div>\r\n  )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"multiSquareLoader_loader__1g3Mz\",\"pgfill\":\"multiSquareLoader_pgfill__O6PE3\"};","import React, { useEffect, useRef, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport ReactJson from 'react-json-view'\r\nimport MultiSquareLoader from '../../components/customSpinner/multiSquare/multiSquareLoader'\r\n\r\nexport default function Refund({ paymentId, trxId, amount }) {\r\n  const [loading, setLoading] = useState(false)\r\n  const [refundData, setRefundData] = useState(null)\r\n  const [refundRes, setRefundRes] = useState(null)\r\n  const amountRef = useRef()\r\n  const skuRef = useRef()\r\n  const reasonRef = useRef()\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    axios\r\n      .get(\r\n        process.env.REACT_APP_SITE_URL + '/payment/bkash/refund/' + paymentId\r\n      )\r\n      .then(({ data }) => {\r\n        setLoading(false)\r\n        setRefundData(data)\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false)\r\n        console.log(error)\r\n      })\r\n  }, [paymentId])\r\n\r\n  const handleRefund = () => {\r\n    setLoading(true)\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_SITE_URL + '/payment/bkash/refund/' + paymentId,\r\n        {\r\n          paymentId,\r\n          trxId,\r\n          amount: amountRef.current.value,\r\n          sku: skuRef.current.value,\r\n          reason: reasonRef.current.value\r\n        }\r\n      )\r\n      .then(({ data }) => {\r\n        setLoading(false)\r\n        setRefundRes(data)\r\n      })\r\n      .catch(({ response }) => {\r\n        setLoading(false)\r\n        setRefundRes(response?.data.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {loading && <MultiSquareLoader />}\r\n      {refundData && <ReactJson src={refundData} name={'OldData'} />}\r\n\r\n      {refundRes && <ReactJson src={refundRes} name={'RecentData'} />}\r\n      <Form>\r\n        <Form.Group controlId='formAmount'>\r\n          <Form.Label>Amount</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='500'\r\n            ref={amountRef}\r\n            defaultValue={amount}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='formSku'>\r\n          <Form.Label>Sku</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Basic MD Course'\r\n            ref={skuRef}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='formReason'>\r\n          <Form.Label>Reason</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Can not enroll'\r\n            ref={reasonRef}\r\n          />\r\n        </Form.Group>\r\n        <Button variant='primary' onClick={handleRefund}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport ReactJson from 'react-json-view'\r\nimport { Button, Modal, Table } from 'react-bootstrap'\r\nimport Pagination from 'react-js-pagination'\r\nimport Refund from './refund'\r\nimport { paginate } from '../../utils/paginate'\r\n\r\nexport default function PaymentAdmin() {\r\n  const [payments, setPayments] = useState(null)\r\n  const [refundForm, setRefundForm] = useState(null)\r\n  const [show, setShow] = useState(false)\r\n  const [paymentIdDetail, setPaymentIdDetail] = useState(null)\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const pageSize = 10\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(process.env.REACT_APP_SITE_URL + '/payment/')\r\n      .then(({ data }) => {\r\n        setPayments(data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  const handleClose = () => {\r\n    setShow(false)\r\n    setPaymentIdDetail(null)\r\n    setRefundForm(null)\r\n  }\r\n  const handleShow = () => setShow(true)\r\n  const showPaymentIdDetails = (paymentId) => {\r\n    handleShow()\r\n    axios\r\n      .post(\r\n        process.env.REACT_APP_SITE_URL + '/payment/bkash/status/' + paymentId\r\n      )\r\n      .then(({ data }) => {\r\n        setPaymentIdDetail(data)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleRefund = (paymentId, trxId, amount) => {\r\n    handleShow()\r\n    setRefundForm({ paymentId, trxId, amount })\r\n  }\r\n\r\n  const paginatedPayments = paginate(payments, currentPage, pageSize)\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {paymentIdDetail && <ReactJson src={paymentIdDetail} name={null} />}\r\n          {refundForm && (\r\n            <Refund\r\n              paymentId={refundForm?.paymentId}\r\n              trxId={refundForm?.trxId}\r\n              amount={refundForm?.amount}\r\n            />\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>PaymentId</th>\r\n            <th>User Id</th>\r\n            <th>AgreementId</th>\r\n            <th>CustomerMsisdn</th>\r\n            <th>Product Type</th>\r\n            <th>ProductId</th>\r\n            <th>InvoiceId</th>\r\n            <th>TrxId</th>\r\n            <th>Amount</th>\r\n            <th>Ref</th>\r\n            <th>PaymentGateway</th>\r\n            <th>TransactionAt</th>\r\n            <th>PaymentCreateTime</th>\r\n            <th>PaymentExecuteTime</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {paginatedPayments?.map((payment, index) => {\r\n            return (\r\n              <tr>\r\n                <td\r\n                  onClick={() => {\r\n                    showPaymentIdDetails(payment.id)\r\n                  }}\r\n                >\r\n                  {index + 1 + (currentPage - 1) * pageSize}\r\n                </td>\r\n                {Object.keys(payment).map((key) => (\r\n                  <td>{payment[key]}</td>\r\n                ))}\r\n                <td>\r\n                  <Button\r\n                    disabled={!payment.trxId}\r\n                    onClick={() => {\r\n                      handleRefund(\r\n                        payment.id,\r\n                        payment.trxId,\r\n                        payment.paymentAmount\r\n                      )\r\n                    }}\r\n                  >\r\n                    Make Refund\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n      <div className='d-flex justify-content-center mt-3'>\r\n        <Pagination\r\n          activePage={currentPage}\r\n          itemsCountPerPage={pageSize}\r\n          totalItemsCount={payments ? payments.length : null}\r\n          pageRangeDisplayed={2}\r\n          onChange={(page) => {\r\n            setCurrentPage(page)\r\n          }}\r\n          itemClass='page-item'\r\n          linkClass='page-link'\r\n          prevPageText='Previous'\r\n          nextPageText='Next'\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}