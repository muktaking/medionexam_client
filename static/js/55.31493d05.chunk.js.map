{"version":3,"sources":["container/exams/examListByCourse.js"],"names":["ExamListsByCat","dispatch","useDispatch","useState","currentPage","setCurrentPage","courses","useSelector","state","useEffect","fetchCourseEnrolledByStuLoader","paginatedCoursesEnrolledByStu","paginate","coursesEnrolledByStu","loading","className","length","map","course","style","width","title","moment","isAfter","endDate","variant","to","id","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","page","itemClass","linkClass","prevPageText","nextPageText","RoutesConfig","Exams","metaInfo"],"mappings":"kSAce,SAASA,IACtB,IAAMC,EAAWC,cADsB,EAEDC,mBAAS,GAFR,mBAEhCC,EAFgC,KAEnBC,EAFmB,KAGjCC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMF,WAG7CG,qBAAU,WACRR,EAASS,iBACR,CAACT,IACJ,IAAMU,EAAgCC,YACpCN,EAAQO,qBACRT,EAPe,GAUjB,OACE,6BACGE,EAAQQ,SAAW,kBAAC,IAAD,MACpB,wBAAIC,UAAU,eAAd,oBACA,yBAAKA,UAAU,OACZT,EAAQO,qBAAqBG,OAAS,EACrC,6BACE,uBAAGD,UAAU,2BAAb,6EAIA,kBAAC,UAAD,OAGF,oCACE,yBAAKA,UAAU,2CACZJ,EAA8BM,KAAI,SAACC,GAAD,OACjC,yBACEH,UAAU,mCACVI,MAAO,CAAEC,MAAO,UAEhB,uBAAGL,UAAU,oBAAoBG,EAAOG,OACxC,uBAAGN,UAAU,oBACVO,IAASC,QAAQL,EAAOM,SACvB,kBAAC,IAAD,CAAOC,QAAQ,SAASV,UAAU,OAAlC,wBAIA,kBAAC,OAAD,CAAMW,GAAI,kBAAoBR,EAAOS,IACnC,kBAAC,IAAD,CAAOF,QAAQ,QAAQV,UAAU,OAAjC,sBASZ,yBAAKA,UAAU,sCACb,kBAAC,IAAD,CACEa,WAAYxB,EACZyB,kBAnDG,EAoDHC,gBAAiBxB,EAAQU,OACzBe,mBAAoB,EACpBC,SAAU,SAACC,GACT5B,EAAe4B,IAEjBC,UAAU,YACVC,UAAU,YACVC,aAAa,WACbC,aAAa,YAMvB,kBAAC,IAAaC,IAAaC,MAAMC","file":"static/js/55.31493d05.chunk.js","sourcesContent":["//import moment from 'moment'\r\nimport * as moment from 'dayjs'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport CircleLoader from '../../components/customSpinner/circleLoader/circleLoader'\r\nimport MetaInfo from '../../components/seo/metainfo'\r\nimport { RoutesConfig } from '../../config/routes.config'\r\nimport { fetchCourseEnrolledByStuLoader } from '../../store/courses'\r\nimport CoursesComponent from '../courses/'\r\nimport Pagination from 'react-js-pagination'\r\nimport { paginate } from '../../utils/paginate'\r\n\r\nexport default function ExamListsByCat() {\r\n  const dispatch = useDispatch()\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const courses = useSelector((state) => state.courses)\r\n  const pageSize = 5\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCourseEnrolledByStuLoader())\r\n  }, [dispatch])\r\n  const paginatedCoursesEnrolledByStu = paginate(\r\n    courses.coursesEnrolledByStu,\r\n    currentPage,\r\n    pageSize\r\n  )\r\n  return (\r\n    <div>\r\n      {courses.loading && <CircleLoader />}\r\n      <h2 className='text-center'>Enrolled Courses</h2>\r\n      <div className='m-3'>\r\n        {courses.coursesEnrolledByStu.length < 1 ? (\r\n          <div>\r\n            <p className='text-center text-danger'>\r\n              You have not enrolled for any course yet. Please enroll any course\r\n              first.\r\n            </p>\r\n            <CoursesComponent />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className='d-flex justify-content-center flex-wrap'>\r\n              {paginatedCoursesEnrolledByStu.map((course) => (\r\n                <div\r\n                  className='mt-3 mr-3 p-3 bg-dark text-white'\r\n                  style={{ width: '250px' }}\r\n                >\r\n                  <p className='lead text-center'>{course.title}</p>\r\n                  <p className='mt-2 text-center'>\r\n                    {moment().isAfter(course.endDate) ? (\r\n                      <Badge variant='danger' className='p-2'>\r\n                        This Course is ended\r\n                      </Badge>\r\n                    ) : (\r\n                      <Link to={'/exams/courses/' + course.id}>\r\n                        <Badge variant='light' className='p-2'>\r\n                          Go to Exams\r\n                        </Badge>\r\n                      </Link>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className='d-flex justify-content-center mt-3'>\r\n              <Pagination\r\n                activePage={currentPage}\r\n                itemsCountPerPage={pageSize}\r\n                totalItemsCount={courses.length}\r\n                pageRangeDisplayed={2}\r\n                onChange={(page) => {\r\n                  setCurrentPage(page)\r\n                }}\r\n                itemClass='page-item'\r\n                linkClass='page-link'\r\n                prevPageText='Previous'\r\n                nextPageText='Next'\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <MetaInfo {...RoutesConfig.Exams.metaInfo} />\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}