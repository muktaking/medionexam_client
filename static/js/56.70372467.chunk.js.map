{"version":3,"sources":["components/navbar/navbarHome.jsx","container/registration/reset.js"],"names":["styles","position","top","left","width","zIndex","connect","state","isAuthenticated","auth","token","props","intl","useIntl","itemsName","formatMessage","id","defaultMessage","pagesName","pages","style","Navbar","bg","variant","expand","to","className","process","Toggle","aria-controls","Collapse","Nav","map","value","index","Item","key","as","isLanding","activeClass","spy","smooth","offset","duration","href","activeClassName","pathname","Reset","useParams","useState","password","setPassword","repeatPassword","setRepeatPassword","formErrors","setFormErrors","resStyle","setResStyle","changeHandler","e","name","target","msg","validator","matches","InputGroup","Prepend","Text","FormControl","placeholder","type","aria-label","aria-describedby","onChange","Alert","Button","onClick","axios","post","then","response","data","message","setTimeout","history","push","catch","error"],"mappings":"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","file":"static/js/56.70372467.chunk.js","sourcesContent":["import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { useIntl } from 'react-intl'\r\nimport { connect } from 'react-redux'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { HashLink } from 'react-router-hash-link'\r\nimport { Link as LinkScroll } from 'react-scroll'\r\n\r\nconst styles = {\r\n  position: 'fixed',\r\n  top: '0px',\r\n  left: '0px',\r\n  width: '100%',\r\n  zIndex: '1000'\r\n}\r\n\r\nconst NavbarHome = (props) => {\r\n  const intl = useIntl()\r\n  const itemsName = [\r\n    intl.formatMessage({ id: 'btn.home', defaultMessage: 'home' }),\r\n    intl.formatMessage({ id: 'btn.contact', defaultMessage: 'contact' })\r\n  ]\r\n  const pagesName = props.isAuthenticated\r\n    ? [\r\n        intl.formatMessage({ id: 'btn.db', defaultMessage: 'dashboard' }),\r\n        intl.formatMessage({ id: 'btn.courses', defaultMessage: 'courses' }),\r\n        intl.formatMessage({ id: 'btn.exams', defaultMessage: 'exams' }),\r\n        intl.formatMessage({ id: 'btn.help', defaultMessage: 'help' }),\r\n        intl.formatMessage({ id: 'btn.logout', defaultMessage: 'logout' })\r\n      ]\r\n    : [\r\n        intl.formatMessage({ id: 'btn.courses', defaultMessage: 'courses' }),\r\n        intl.formatMessage({ id: 'btn.exams', defaultMessage: 'exams' }),\r\n        intl.formatMessage({ id: 'btn.help', defaultMessage: 'help' }),\r\n        intl.formatMessage({ id: 'btn.signup', defaultMessage: 'signup' }),\r\n        intl.formatMessage({ id: 'btn.login', defaultMessage: 'login' })\r\n      ]\r\n  const items = ['home', 'contact']\r\n  const pages = props.isAuthenticated\r\n    ? ['dashboard', 'courses', 'exams', 'help', 'logout']\r\n    : ['courses', 'exams', 'help', 'signup', 'login']\r\n\r\n  return (\r\n    <div style={styles}>\r\n      {/* <Promotional /> */}\r\n      <Navbar bg='dark' variant='dark' expand='md'>\r\n        <Link to='/' className='navbar-brand'>\r\n          {process.env.REACT_APP_NAME}\r\n        </Link>\r\n        <Navbar.Toggle aria-controls='navbarResponsive' />\r\n        <Navbar.Collapse id='navbarResponsive'>\r\n          <Nav className='ml-auto'>\r\n            {items.map((value, index) => (\r\n              <Nav.Item key={value} as='li' className='mr-3'>\r\n                {props.isLanding ? (\r\n                  <LinkScroll\r\n                    activeClass='active'\r\n                    to={value}\r\n                    spy={true}\r\n                    smooth={true}\r\n                    offset={-100}\r\n                    duration={500}\r\n                    href={value === 'home' ? '/' : `/#${value}`}\r\n                    className='nav-link'\r\n                  >\r\n                    {itemsName[index]}\r\n                  </LinkScroll>\r\n                ) : (\r\n                  <HashLink\r\n                    to={'/#' + value}\r\n                    className='nav-link'\r\n                    activeClassName='active'\r\n                  >\r\n                    {itemsName[index]}\r\n                  </HashLink>\r\n                )}\r\n              </Nav.Item>\r\n            ))}\r\n            {pages.map((value, index) => (\r\n              <Nav.Item key={value} as='li' className='mr-3'>\r\n                <NavLink to={{ pathname: '/' + value }} className='nav-link'>\r\n                  {pagesName[index]}\r\n                </NavLink>\r\n              </Nav.Item>\r\n            ))}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarHome)\r\n","import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { Alert, Button, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { CgPassword } from 'react-icons/cg'\r\nimport { useParams } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport '../../assets/scss/section/registration.scss'\r\nimport NavbarHome from '../../components/navbar/navbarHome'\r\n\r\nexport default function Reset({ ...props }) {\r\n  let { id } = useParams()\r\n  const [password, setPassword] = useState(null)\r\n  const [repeatPassword, setRepeatPassword] = useState(null)\r\n  const [formErrors, setFormErrors] = useState('')\r\n  const [resStyle, setResStyle] = useState('danger')\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name\r\n    const value = e.target.value\r\n    let msg = ''\r\n    switch (name) {\r\n      case 'password':\r\n        msg += validator.matches(\r\n          value,\r\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{6,})/\r\n        )\r\n          ? ''\r\n          : 'Password should be minimum 6 characters and contain atleast one capital and lowercase alpha, neumeric value'\r\n        setPassword(value)\r\n        break\r\n      case 'repeatPassword':\r\n        msg += value === password ? '' : 'Repeat Password is not matched '\r\n        setRepeatPassword(value)\r\n\r\n        break\r\n\r\n      default:\r\n        break\r\n    }\r\n    setFormErrors(msg)\r\n  }\r\n\r\n  const submitHandler = () => {\r\n    if (!password) {\r\n      setFormErrors('Password can not be empty')\r\n      return\r\n    } else if (password !== repeatPassword) {\r\n      setFormErrors('Two Password fields must be matched')\r\n      return\r\n    } else if (formErrors) {\r\n      return\r\n    } else {\r\n      axios\r\n        .post(process.env.REACT_APP_SITE_URL + '/auth/reset/' + id, {\r\n          password,\r\n          token: id\r\n        })\r\n        .then((response) => {\r\n          setFormErrors(\r\n            response.data.message + ' . Redirecting to login page...'\r\n          )\r\n          setResStyle('success')\r\n          setTimeout(() => {\r\n            props.history.push({ pathname: '/login' })\r\n          }, 3000)\r\n        })\r\n        .catch((error) => {\r\n          setFormErrors('Reset can not be done.Token may be expired')\r\n          setResStyle('danger')\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='registration'>\r\n      <NavbarHome isLanding={false} />\r\n      <div className='landing'>\r\n        <div className='home-inner'></div>\r\n      </div>\r\n      <div className='caption text-center'>\r\n        <h1>Reset Password</h1>\r\n        <div className='heading-underline'></div>\r\n        <div>\r\n          <InputGroup className='mb-3'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id='password'>\r\n                <CgPassword />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              placeholder='Password'\r\n              type='password'\r\n              name='password'\r\n              aria-label='Password'\r\n              aria-describedby='password'\r\n              onChange={changeHandler}\r\n            />\r\n          </InputGroup>\r\n          <InputGroup className='mb-3'>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text id='repeatPassword'>\r\n                <CgPassword />\r\n              </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              placeholder='Repeat Password'\r\n              type='password'\r\n              name='repeatPassword'\r\n              aria-label='RepeatPassword'\r\n              aria-describedby='repeatPassword'\r\n              onChange={changeHandler}\r\n            />\r\n          </InputGroup>\r\n          {formErrors !== '' && (\r\n            <Alert className='my-2' variant={resStyle}>\r\n              {' '}\r\n              {formErrors}{' '}\r\n            </Alert>\r\n          )}\r\n          <Button variant='primary' onClick={submitHandler}>\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"sourceRoot":""}